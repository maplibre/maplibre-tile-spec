name: Release MLT JavaScript

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  release-check:
    name: Check if version changed
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0, ref: main }

      - uses: ./.github/actions/mlt-setup-node

      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with: { file-name: ts/package.json }

    outputs:
      publish: ${{ steps.check.outputs.changed }}

  release:
    name: Release
    needs: release-check
    if: ${{ needs.release-check.outputs.publish == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:

      - uses: actions/checkout@v5
        with: { fetch-depth: 0, ref: main }

      - uses: ./.github/actions/mlt-setup-node

      - name: Get version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with: 
          path: ts

      - name: Install
        working-directory: ts
        run: npm ci

      - name: Prepare release
        id: prepare_release
        working-directory: ts
        run: |
          RELEASE_TYPE=$(node -e "console.log(require('semver').prerelease('${{ steps.package-version.outputs.current-version }}') ? 'prerelease' : 'regular')")
          echo "release_type=$RELEASE_TYPE" >> "$GITHUB_OUTPUT"

      - name: Build
        working-directory: ts
        run: |
          npm run build

      - name: Publish NPM package (regular)
        working-directory: ts
        if: ${{ steps.prepare_release.outputs.release_type == 'regular' }}
        run: |
          npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ORG_TOKEN }}

      - name: Publish NPM package (pre-release)
        working-directory: ts
        if: ${{ steps.prepare_release.outputs.release_type == 'prerelease' }}
        run: |
          npm publish --access=public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ORG_TOKEN }}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mlt_tileset_metadata.proto

package org.maplibre.mlt.metadata.tileset;

public final class MltTilesetMetadata {
  private MltTilesetMetadata() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  /** Protobuf enum {@code mlt.ColumnScope} */
  public enum ColumnScope implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * 1:1 Mapping of property and feature -&gt; id and geometry
     * </pre>
     *
     * <code>FEATURE = 0;</code>
     */
    FEATURE(0),
    /**
     *
     *
     * <pre>
     * For M-Values -&gt; 1:1 Mapping for property and vertex
     * </pre>
     *
     * <code>VERTEX = 1;</code>
     */
    VERTEX(1),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * 1:1 Mapping of property and feature -&gt; id and geometry
     * </pre>
     *
     * <code>FEATURE = 0;</code>
     */
    public static final int FEATURE_VALUE = 0;

    /**
     *
     *
     * <pre>
     * For M-Values -&gt; 1:1 Mapping for property and vertex
     * </pre>
     *
     * <code>VERTEX = 1;</code>
     */
    public static final int VERTEX_VALUE = 1;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ColumnScope valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ColumnScope forNumber(int value) {
      switch (value) {
        case 0:
          return FEATURE;
        case 1:
          return VERTEX;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ColumnScope> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<ColumnScope> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ColumnScope>() {
          public ColumnScope findValueByNumber(int number) {
            return ColumnScope.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final ColumnScope[] VALUES = values();

    public static ColumnScope valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ColumnScope(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mlt.ColumnScope)
  }

  /** Protobuf enum {@code mlt.ScalarType} */
  public enum ScalarType implements com.google.protobuf.ProtocolMessageEnum {
    /** <code>BOOLEAN = 0;</code> */
    BOOLEAN(0),
    /** <code>INT_8 = 1;</code> */
    INT_8(1),
    /** <code>UINT_8 = 2;</code> */
    UINT_8(2),
    /** <code>INT_32 = 3;</code> */
    INT_32(3),
    /** <code>UINT_32 = 4;</code> */
    UINT_32(4),
    /** <code>INT_64 = 5;</code> */
    INT_64(5),
    /** <code>UINT_64 = 6;</code> */
    UINT_64(6),
    /** <code>FLOAT = 7;</code> */
    FLOAT(7),
    /** <code>DOUBLE = 8;</code> */
    DOUBLE(8),
    /** <code>STRING = 9;</code> */
    STRING(9),
    UNRECOGNIZED(-1),
    ;

    /** <code>BOOLEAN = 0;</code> */
    public static final int BOOLEAN_VALUE = 0;

    /** <code>INT_8 = 1;</code> */
    public static final int INT_8_VALUE = 1;

    /** <code>UINT_8 = 2;</code> */
    public static final int UINT_8_VALUE = 2;

    /** <code>INT_32 = 3;</code> */
    public static final int INT_32_VALUE = 3;

    /** <code>UINT_32 = 4;</code> */
    public static final int UINT_32_VALUE = 4;

    /** <code>INT_64 = 5;</code> */
    public static final int INT_64_VALUE = 5;

    /** <code>UINT_64 = 6;</code> */
    public static final int UINT_64_VALUE = 6;

    /** <code>FLOAT = 7;</code> */
    public static final int FLOAT_VALUE = 7;

    /** <code>DOUBLE = 8;</code> */
    public static final int DOUBLE_VALUE = 8;

    /** <code>STRING = 9;</code> */
    public static final int STRING_VALUE = 9;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ScalarType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ScalarType forNumber(int value) {
      switch (value) {
        case 0:
          return BOOLEAN;
        case 1:
          return INT_8;
        case 2:
          return UINT_8;
        case 3:
          return INT_32;
        case 4:
          return UINT_32;
        case 5:
          return INT_64;
        case 6:
          return UINT_64;
        case 7:
          return FLOAT;
        case 8:
          return DOUBLE;
        case 9:
          return STRING;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ScalarType> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<ScalarType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ScalarType>() {
          public ScalarType findValueByNumber(int number) {
            return ScalarType.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.getDescriptor()
          .getEnumTypes()
          .get(1);
    }

    private static final ScalarType[] VALUES = values();

    public static ScalarType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ScalarType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mlt.ScalarType)
  }

  /** Protobuf enum {@code mlt.ComplexType} */
  public enum ComplexType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * fixed size binary with 2 values of the same type either signed or unsigned Int8, Int32, Int64 as well as Float or Double
     * </pre>
     *
     * <code>VEC_2 = 0;</code>
     */
    VEC_2(0),
    /**
     *
     *
     * <pre>
     * fixed size binary with 2 values of the same type either signed or unsigned Int8, Int32, Int64 as well as Float or Double
     * </pre>
     *
     * <code>VEC_3 = 1;</code>
     */
    VEC_3(1),
    /**
     *
     *
     * <pre>
     * vec2&lt;Int32&gt; for the VertexBuffer stream with additional information (streams) about the topology
     * </pre>
     *
     * <code>GEOMETRY = 2;</code>
     */
    GEOMETRY(2),
    /**
     *
     *
     * <pre>
     * vec3&lt;Int32&gt; for the VertexBuffer stream with additional information (streams) about the topology
     * </pre>
     *
     * <code>GEOMETRY_Z = 3;</code>
     */
    GEOMETRY_Z(3),
    /** <code>LIST = 4;</code> */
    LIST(4),
    /** <code>MAP = 5;</code> */
    MAP(5),
    /** <code>STRUCT = 6;</code> */
    STRUCT(6),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * fixed size binary with 2 values of the same type either signed or unsigned Int8, Int32, Int64 as well as Float or Double
     * </pre>
     *
     * <code>VEC_2 = 0;</code>
     */
    public static final int VEC_2_VALUE = 0;

    /**
     *
     *
     * <pre>
     * fixed size binary with 2 values of the same type either signed or unsigned Int8, Int32, Int64 as well as Float or Double
     * </pre>
     *
     * <code>VEC_3 = 1;</code>
     */
    public static final int VEC_3_VALUE = 1;

    /**
     *
     *
     * <pre>
     * vec2&lt;Int32&gt; for the VertexBuffer stream with additional information (streams) about the topology
     * </pre>
     *
     * <code>GEOMETRY = 2;</code>
     */
    public static final int GEOMETRY_VALUE = 2;

    /**
     *
     *
     * <pre>
     * vec3&lt;Int32&gt; for the VertexBuffer stream with additional information (streams) about the topology
     * </pre>
     *
     * <code>GEOMETRY_Z = 3;</code>
     */
    public static final int GEOMETRY_Z_VALUE = 3;

    /** <code>LIST = 4;</code> */
    public static final int LIST_VALUE = 4;

    /** <code>MAP = 5;</code> */
    public static final int MAP_VALUE = 5;

    /** <code>STRUCT = 6;</code> */
    public static final int STRUCT_VALUE = 6;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ComplexType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ComplexType forNumber(int value) {
      switch (value) {
        case 0:
          return VEC_2;
        case 1:
          return VEC_3;
        case 2:
          return GEOMETRY;
        case 3:
          return GEOMETRY_Z;
        case 4:
          return LIST;
        case 5:
          return MAP;
        case 6:
          return STRUCT;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ComplexType> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<ComplexType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ComplexType>() {
          public ComplexType findValueByNumber(int number) {
            return ComplexType.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.getDescriptor()
          .getEnumTypes()
          .get(2);
    }

    private static final ComplexType[] VALUES = values();

    public static ComplexType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ComplexType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mlt.ComplexType)
  }

  /** Protobuf enum {@code mlt.LogicalScalarType} */
  public enum LogicalScalarType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * physical type: Int64 -&gt; number of milliseconds since Unix epoch
     * </pre>
     *
     * <code>TIMESTAMP = 0;</code>
     */
    TIMESTAMP(0),
    /**
     *
     *
     * <pre>
     * physical type: Int32 -&gt; number of days since Unix epoch
     * </pre>
     *
     * <code>DATE = 1;</code>
     */
    DATE(1),
    /**
     *
     *
     * <pre>
     * physical type: String
     * </pre>
     *
     * <code>JSON = 2;</code>
     */
    JSON(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * physical type: Int64 -&gt; number of milliseconds since Unix epoch
     * </pre>
     *
     * <code>TIMESTAMP = 0;</code>
     */
    public static final int TIMESTAMP_VALUE = 0;

    /**
     *
     *
     * <pre>
     * physical type: Int32 -&gt; number of days since Unix epoch
     * </pre>
     *
     * <code>DATE = 1;</code>
     */
    public static final int DATE_VALUE = 1;

    /**
     *
     *
     * <pre>
     * physical type: String
     * </pre>
     *
     * <code>JSON = 2;</code>
     */
    public static final int JSON_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LogicalScalarType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LogicalScalarType forNumber(int value) {
      switch (value) {
        case 0:
          return TIMESTAMP;
        case 1:
          return DATE;
        case 2:
          return JSON;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogicalScalarType>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<LogicalScalarType>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogicalScalarType>() {
              public LogicalScalarType findValueByNumber(int number) {
                return LogicalScalarType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.getDescriptor()
          .getEnumTypes()
          .get(3);
    }

    private static final LogicalScalarType[] VALUES = values();

    public static LogicalScalarType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LogicalScalarType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mlt.LogicalScalarType)
  }

  /** Protobuf enum {@code mlt.LogicalComplexType} */
  public enum LogicalComplexType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * physical type: list&lt;UInt8&gt;
     * </pre>
     *
     * <code>BINARY = 0;</code>
     */
    BINARY(0),
    /**
     *
     *
     * <pre>
     * physical type: map&lt;vec2&lt;double, T&gt;&gt; -&gt; special data structure which can be used for a efficient representation of linear referencing
     * </pre>
     *
     * <code>RANGE_MAP = 1;</code>
     */
    RANGE_MAP(1),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * physical type: list&lt;UInt8&gt;
     * </pre>
     *
     * <code>BINARY = 0;</code>
     */
    public static final int BINARY_VALUE = 0;

    /**
     *
     *
     * <pre>
     * physical type: map&lt;vec2&lt;double, T&gt;&gt; -&gt; special data structure which can be used for a efficient representation of linear referencing
     * </pre>
     *
     * <code>RANGE_MAP = 1;</code>
     */
    public static final int RANGE_MAP_VALUE = 1;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LogicalComplexType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LogicalComplexType forNumber(int value) {
      switch (value) {
        case 0:
          return BINARY;
        case 1:
          return RANGE_MAP;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogicalComplexType>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<LogicalComplexType>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogicalComplexType>() {
              public LogicalComplexType findValueByNumber(int number) {
                return LogicalComplexType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.getDescriptor()
          .getEnumTypes()
          .get(4);
    }

    private static final LogicalComplexType[] VALUES = values();

    public static LogicalComplexType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LogicalComplexType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mlt.LogicalComplexType)
  }

  public interface TileSetMetadataOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:mlt.TileSetMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 version = 1;</code>
     *
     * @return The version.
     */
    int getVersion();

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema>
        getFeatureTablesList();

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema getFeatureTables(
        int index);

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    int getFeatureTablesCount();

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    java.util.List<
            ? extends
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder>
        getFeatureTablesOrBuilderList();

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder
        getFeatureTablesOrBuilder(int index);

    /**
     * <code>optional string name = 3;</code>
     *
     * @return Whether the name field is set.
     */
    boolean hasName();

    /**
     * <code>optional string name = 3;</code>
     *
     * @return The name.
     */
    java.lang.String getName();

    /**
     * <code>optional string name = 3;</code>
     *
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString getNameBytes();

    /**
     * <code>optional string description = 4;</code>
     *
     * @return Whether the description field is set.
     */
    boolean hasDescription();

    /**
     * <code>optional string description = 4;</code>
     *
     * @return The description.
     */
    java.lang.String getDescription();

    /**
     * <code>optional string description = 4;</code>
     *
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString getDescriptionBytes();

    /**
     * <code>optional string attribution = 5;</code>
     *
     * @return Whether the attribution field is set.
     */
    boolean hasAttribution();

    /**
     * <code>optional string attribution = 5;</code>
     *
     * @return The attribution.
     */
    java.lang.String getAttribution();

    /**
     * <code>optional string attribution = 5;</code>
     *
     * @return The bytes for attribution.
     */
    com.google.protobuf.ByteString getAttributionBytes();

    /**
     * <code>optional int32 minZoom = 6;</code>
     *
     * @return Whether the minZoom field is set.
     */
    boolean hasMinZoom();

    /**
     * <code>optional int32 minZoom = 6;</code>
     *
     * @return The minZoom.
     */
    int getMinZoom();

    /**
     * <code>optional int32 maxZoom = 7;</code>
     *
     * @return Whether the maxZoom field is set.
     */
    boolean hasMaxZoom();

    /**
     * <code>optional int32 maxZoom = 7;</code>
     *
     * @return The maxZoom.
     */
    int getMaxZoom();

    /**
     *
     *
     * <pre>
     * order left, bottom, right, top in WGS84
     * </pre>
     *
     * <code>repeated double bounds = 8;</code>
     *
     * @return A list containing the bounds.
     */
    java.util.List<java.lang.Double> getBoundsList();

    /**
     *
     *
     * <pre>
     * order left, bottom, right, top in WGS84
     * </pre>
     *
     * <code>repeated double bounds = 8;</code>
     *
     * @return The count of bounds.
     */
    int getBoundsCount();

    /**
     *
     *
     * <pre>
     * order left, bottom, right, top in WGS84
     * </pre>
     *
     * <code>repeated double bounds = 8;</code>
     *
     * @param index The index of the element to return.
     * @return The bounds at the given index.
     */
    double getBounds(int index);

    /**
     *
     *
     * <pre>
     * order longitude, latitude in WGS84
     * </pre>
     *
     * <code>repeated double center = 9;</code>
     *
     * @return A list containing the center.
     */
    java.util.List<java.lang.Double> getCenterList();

    /**
     *
     *
     * <pre>
     * order longitude, latitude in WGS84
     * </pre>
     *
     * <code>repeated double center = 9;</code>
     *
     * @return The count of center.
     */
    int getCenterCount();

    /**
     *
     *
     * <pre>
     * order longitude, latitude in WGS84
     * </pre>
     *
     * <code>repeated double center = 9;</code>
     *
     * @param index The index of the element to return.
     * @return The center at the given index.
     */
    double getCenter(int index);
  }

  /** Protobuf type {@code mlt.TileSetMetadata} */
  public static final class TileSetMetadata extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:mlt.TileSetMetadata)
      TileSetMetadataOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use TileSetMetadata.newBuilder() to construct.
    private TileSetMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private TileSetMetadata() {
      featureTables_ = java.util.Collections.emptyList();
      name_ = "";
      description_ = "";
      attribution_ = "";
      bounds_ = emptyDoubleList();
      center_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new TileSetMetadata();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_TileSetMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_TileSetMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata.class,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_ = 0;

    /**
     * <code>int32 version = 1;</code>
     *
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int FEATURETABLES_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema>
        featureTables_;

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    @java.lang.Override
    public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema>
        getFeatureTablesList() {
      return featureTables_;
    }

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    @java.lang.Override
    public java.util.List<
            ? extends
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder>
        getFeatureTablesOrBuilderList() {
      return featureTables_;
    }

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    @java.lang.Override
    public int getFeatureTablesCount() {
      return featureTables_.size();
    }

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema getFeatureTables(
        int index) {
      return featureTables_.get(index);
    }

    /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder
        getFeatureTablesOrBuilder(int index) {
      return featureTables_.get(index);
    }

    public static final int NAME_FIELD_NUMBER = 3;

    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";

    /**
     * <code>optional string name = 3;</code>
     *
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     * <code>optional string name = 3;</code>
     *
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }

    /**
     * <code>optional string name = 3;</code>
     *
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;

    @SuppressWarnings("serial")
    private volatile java.lang.Object description_ = "";

    /**
     * <code>optional string description = 4;</code>
     *
     * @return Whether the description field is set.
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     * <code>optional string description = 4;</code>
     *
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }

    /**
     * <code>optional string description = 4;</code>
     *
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATTRIBUTION_FIELD_NUMBER = 5;

    @SuppressWarnings("serial")
    private volatile java.lang.Object attribution_ = "";

    /**
     * <code>optional string attribution = 5;</code>
     *
     * @return Whether the attribution field is set.
     */
    @java.lang.Override
    public boolean hasAttribution() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     * <code>optional string attribution = 5;</code>
     *
     * @return The attribution.
     */
    @java.lang.Override
    public java.lang.String getAttribution() {
      java.lang.Object ref = attribution_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        attribution_ = s;
        return s;
      }
    }

    /**
     * <code>optional string attribution = 5;</code>
     *
     * @return The bytes for attribution.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAttributionBytes() {
      java.lang.Object ref = attribution_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        attribution_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MINZOOM_FIELD_NUMBER = 6;
    private int minZoom_ = 0;

    /**
     * <code>optional int32 minZoom = 6;</code>
     *
     * @return Whether the minZoom field is set.
     */
    @java.lang.Override
    public boolean hasMinZoom() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     * <code>optional int32 minZoom = 6;</code>
     *
     * @return The minZoom.
     */
    @java.lang.Override
    public int getMinZoom() {
      return minZoom_;
    }

    public static final int MAXZOOM_FIELD_NUMBER = 7;
    private int maxZoom_ = 0;

    /**
     * <code>optional int32 maxZoom = 7;</code>
     *
     * @return Whether the maxZoom field is set.
     */
    @java.lang.Override
    public boolean hasMaxZoom() {
      return ((bitField0_ & 0x00000010) != 0);
    }

    /**
     * <code>optional int32 maxZoom = 7;</code>
     *
     * @return The maxZoom.
     */
    @java.lang.Override
    public int getMaxZoom() {
      return maxZoom_;
    }

    public static final int BOUNDS_FIELD_NUMBER = 8;

    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList bounds_;

    /**
     *
     *
     * <pre>
     * order left, bottom, right, top in WGS84
     * </pre>
     *
     * <code>repeated double bounds = 8;</code>
     *
     * @return A list containing the bounds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double> getBoundsList() {
      return bounds_;
    }

    /**
     *
     *
     * <pre>
     * order left, bottom, right, top in WGS84
     * </pre>
     *
     * <code>repeated double bounds = 8;</code>
     *
     * @return The count of bounds.
     */
    public int getBoundsCount() {
      return bounds_.size();
    }

    /**
     *
     *
     * <pre>
     * order left, bottom, right, top in WGS84
     * </pre>
     *
     * <code>repeated double bounds = 8;</code>
     *
     * @param index The index of the element to return.
     * @return The bounds at the given index.
     */
    public double getBounds(int index) {
      return bounds_.getDouble(index);
    }

    private int boundsMemoizedSerializedSize = -1;

    public static final int CENTER_FIELD_NUMBER = 9;

    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList center_;

    /**
     *
     *
     * <pre>
     * order longitude, latitude in WGS84
     * </pre>
     *
     * <code>repeated double center = 9;</code>
     *
     * @return A list containing the center.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double> getCenterList() {
      return center_;
    }

    /**
     *
     *
     * <pre>
     * order longitude, latitude in WGS84
     * </pre>
     *
     * <code>repeated double center = 9;</code>
     *
     * @return The count of center.
     */
    public int getCenterCount() {
      return center_.size();
    }

    /**
     *
     *
     * <pre>
     * order longitude, latitude in WGS84
     * </pre>
     *
     * <code>repeated double center = 9;</code>
     *
     * @param index The index of the element to return.
     * @return The center at the given index.
     */
    public double getCenter(int index) {
      return center_.getDouble(index);
    }

    private int centerMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (version_ != 0) {
        output.writeInt32(1, version_);
      }
      for (int i = 0; i < featureTables_.size(); i++) {
        output.writeMessage(2, featureTables_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, attribution_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(6, minZoom_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(7, maxZoom_);
      }
      if (getBoundsList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(boundsMemoizedSerializedSize);
      }
      for (int i = 0; i < bounds_.size(); i++) {
        output.writeDoubleNoTag(bounds_.getDouble(i));
      }
      if (getCenterList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(centerMemoizedSerializedSize);
      }
      for (int i = 0; i < center_.size(); i++) {
        output.writeDoubleNoTag(center_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, version_);
      }
      for (int i = 0; i < featureTables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, featureTables_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, attribution_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(6, minZoom_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(7, maxZoom_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getBoundsList().size();
        size += dataSize;
        if (!getBoundsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
        }
        boundsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getCenterList().size();
        size += dataSize;
        if (!getCenterList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
        }
        centerMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata)) {
        return super.equals(obj);
      }
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata other =
          (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata) obj;

      if (getVersion() != other.getVersion()) return false;
      if (!getFeatureTablesList().equals(other.getFeatureTablesList())) return false;
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName().equals(other.getName())) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription().equals(other.getDescription())) return false;
      }
      if (hasAttribution() != other.hasAttribution()) return false;
      if (hasAttribution()) {
        if (!getAttribution().equals(other.getAttribution())) return false;
      }
      if (hasMinZoom() != other.hasMinZoom()) return false;
      if (hasMinZoom()) {
        if (getMinZoom() != other.getMinZoom()) return false;
      }
      if (hasMaxZoom() != other.hasMaxZoom()) return false;
      if (hasMaxZoom()) {
        if (getMaxZoom() != other.getMaxZoom()) return false;
      }
      if (!getBoundsList().equals(other.getBoundsList())) return false;
      if (!getCenterList().equals(other.getCenterList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      if (getFeatureTablesCount() > 0) {
        hash = (37 * hash) + FEATURETABLES_FIELD_NUMBER;
        hash = (53 * hash) + getFeatureTablesList().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (hasAttribution()) {
        hash = (37 * hash) + ATTRIBUTION_FIELD_NUMBER;
        hash = (53 * hash) + getAttribution().hashCode();
      }
      if (hasMinZoom()) {
        hash = (37 * hash) + MINZOOM_FIELD_NUMBER;
        hash = (53 * hash) + getMinZoom();
      }
      if (hasMaxZoom()) {
        hash = (37 * hash) + MAXZOOM_FIELD_NUMBER;
        hash = (53 * hash) + getMaxZoom();
      }
      if (getBoundsCount() > 0) {
        hash = (37 * hash) + BOUNDS_FIELD_NUMBER;
        hash = (53 * hash) + getBoundsList().hashCode();
      }
      if (getCenterCount() > 0) {
        hash = (37 * hash) + CENTER_FIELD_NUMBER;
        hash = (53 * hash) + getCenterList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /** Protobuf type {@code mlt.TileSetMetadata} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:mlt.TileSetMetadata)
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_TileSetMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_TileSetMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata.class,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata.Builder.class);
      }

      // Construct using
      // org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        version_ = 0;
        if (featureTablesBuilder_ == null) {
          featureTables_ = java.util.Collections.emptyList();
        } else {
          featureTables_ = null;
          featureTablesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        description_ = "";
        attribution_ = "";
        minZoom_ = 0;
        maxZoom_ = 0;
        bounds_ = emptyDoubleList();
        center_ = emptyDoubleList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_TileSetMetadata_descriptor;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata
          getDefaultInstanceForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata build() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata buildPartial() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata result =
            new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata result) {
        if (featureTablesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            featureTables_ = java.util.Collections.unmodifiableList(featureTables_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.featureTables_ = featureTables_;
        } else {
          result.featureTables_ = featureTablesBuilder_.build();
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          bounds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.bounds_ = bounds_;
        if (((bitField0_ & 0x00000100) != 0)) {
          center_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.center_ = center_;
      }

      private void buildPartial0(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.version_ = version_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.description_ = description_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.attribution_ = attribution_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.minZoom_ = minZoom_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.maxZoom_ = maxZoom_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata) {
          return mergeFrom(
              (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata other) {
        if (other
            == org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata
                .getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (featureTablesBuilder_ == null) {
          if (!other.featureTables_.isEmpty()) {
            if (featureTables_.isEmpty()) {
              featureTables_ = other.featureTables_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFeatureTablesIsMutable();
              featureTables_.addAll(other.featureTables_);
            }
            onChanged();
          }
        } else {
          if (!other.featureTables_.isEmpty()) {
            if (featureTablesBuilder_.isEmpty()) {
              featureTablesBuilder_.dispose();
              featureTablesBuilder_ = null;
              featureTables_ = other.featureTables_;
              bitField0_ = (bitField0_ & ~0x00000002);
              featureTablesBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getFeatureTablesFieldBuilder()
                      : null;
            } else {
              featureTablesBuilder_.addAllMessages(other.featureTables_);
            }
          }
        }
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasDescription()) {
          description_ = other.description_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasAttribution()) {
          attribution_ = other.attribution_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.hasMinZoom()) {
          setMinZoom(other.getMinZoom());
        }
        if (other.hasMaxZoom()) {
          setMaxZoom(other.getMaxZoom());
        }
        if (!other.bounds_.isEmpty()) {
          if (bounds_.isEmpty()) {
            bounds_ = other.bounds_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureBoundsIsMutable();
            bounds_.addAll(other.bounds_);
          }
          onChanged();
        }
        if (!other.center_.isEmpty()) {
          if (center_.isEmpty()) {
            center_ = other.center_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureCenterIsMutable();
            center_.addAll(other.center_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  version_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 18:
                {
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema m =
                      input.readMessage(
                          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
                              .parser(),
                          extensionRegistry);
                  if (featureTablesBuilder_ == null) {
                    ensureFeatureTablesIsMutable();
                    featureTables_.add(m);
                  } else {
                    featureTablesBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
              case 26:
                {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
              case 34:
                {
                  description_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
              case 42:
                {
                  attribution_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
              case 48:
                {
                  minZoom_ = input.readInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
              case 56:
                {
                  maxZoom_ = input.readInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
              case 65:
                {
                  double v = input.readDouble();
                  ensureBoundsIsMutable();
                  bounds_.addDouble(v);
                  break;
                } // case 65
              case 66:
                {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureBoundsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    bounds_.addDouble(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                } // case 66
              case 73:
                {
                  double v = input.readDouble();
                  ensureCenterIsMutable();
                  center_.addDouble(v);
                  break;
                } // case 73
              case 74:
                {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureCenterIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    center_.addDouble(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                } // case 74
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int version_;

      /**
       * <code>int32 version = 1;</code>
       *
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }

      /**
       * <code>int32 version = 1;</code>
       *
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {

        version_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       * <code>int32 version = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema>
          featureTables_ = java.util.Collections.emptyList();

      private void ensureFeatureTablesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          featureTables_ =
              new java.util.ArrayList<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema>(
                  featureTables_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder>
          featureTablesBuilder_;

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema>
          getFeatureTablesList() {
        if (featureTablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(featureTables_);
        } else {
          return featureTablesBuilder_.getMessageList();
        }
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public int getFeatureTablesCount() {
        if (featureTablesBuilder_ == null) {
          return featureTables_.size();
        } else {
          return featureTablesBuilder_.getCount();
        }
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
          getFeatureTables(int index) {
        if (featureTablesBuilder_ == null) {
          return featureTables_.get(index);
        } else {
          return featureTablesBuilder_.getMessage(index);
        }
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder setFeatureTables(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema value) {
        if (featureTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureTablesIsMutable();
          featureTables_.set(index, value);
          onChanged();
        } else {
          featureTablesBuilder_.setMessage(index, value);
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder setFeatureTables(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder
              builderForValue) {
        if (featureTablesBuilder_ == null) {
          ensureFeatureTablesIsMutable();
          featureTables_.set(index, builderForValue.build());
          onChanged();
        } else {
          featureTablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder addFeatureTables(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema value) {
        if (featureTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureTablesIsMutable();
          featureTables_.add(value);
          onChanged();
        } else {
          featureTablesBuilder_.addMessage(value);
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder addFeatureTables(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema value) {
        if (featureTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureTablesIsMutable();
          featureTables_.add(index, value);
          onChanged();
        } else {
          featureTablesBuilder_.addMessage(index, value);
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder addFeatureTables(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder
              builderForValue) {
        if (featureTablesBuilder_ == null) {
          ensureFeatureTablesIsMutable();
          featureTables_.add(builderForValue.build());
          onChanged();
        } else {
          featureTablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder addFeatureTables(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder
              builderForValue) {
        if (featureTablesBuilder_ == null) {
          ensureFeatureTablesIsMutable();
          featureTables_.add(index, builderForValue.build());
          onChanged();
        } else {
          featureTablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder addAllFeatureTables(
          java.lang.Iterable<
                  ? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema>
              values) {
        if (featureTablesBuilder_ == null) {
          ensureFeatureTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, featureTables_);
          onChanged();
        } else {
          featureTablesBuilder_.addAllMessages(values);
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder clearFeatureTables() {
        if (featureTablesBuilder_ == null) {
          featureTables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          featureTablesBuilder_.clear();
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public Builder removeFeatureTables(int index) {
        if (featureTablesBuilder_ == null) {
          ensureFeatureTablesIsMutable();
          featureTables_.remove(index);
          onChanged();
        } else {
          featureTablesBuilder_.remove(index);
        }
        return this;
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder
          getFeatureTablesBuilder(int index) {
        return getFeatureTablesFieldBuilder().getBuilder(index);
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder
          getFeatureTablesOrBuilder(int index) {
        if (featureTablesBuilder_ == null) {
          return featureTables_.get(index);
        } else {
          return featureTablesBuilder_.getMessageOrBuilder(index);
        }
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public java.util.List<
              ? extends
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder>
          getFeatureTablesOrBuilderList() {
        if (featureTablesBuilder_ != null) {
          return featureTablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(featureTables_);
        }
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder
          addFeatureTablesBuilder() {
        return getFeatureTablesFieldBuilder()
            .addBuilder(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
                    .getDefaultInstance());
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder
          addFeatureTablesBuilder(int index) {
        return getFeatureTablesFieldBuilder()
            .addBuilder(
                index,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
                    .getDefaultInstance());
      }

      /** <code>repeated .mlt.FeatureTableSchema featureTables = 2;</code> */
      public java.util.List<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder>
          getFeatureTablesBuilderList() {
        return getFeatureTablesFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder>
          getFeatureTablesFieldBuilder() {
        if (featureTablesBuilder_ == null) {
          featureTablesBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder>(
                  featureTables_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          featureTables_ = null;
        }
        return featureTablesBuilder_;
      }

      private java.lang.Object name_ = "";

      /**
       * <code>optional string name = 3;</code>
       *
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) != 0);
      }

      /**
       * <code>optional string name = 3;</code>
       *
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string name = 3;</code>
       *
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string name = 3;</code>
       *
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      /**
       * <code>optional string name = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      /**
       * <code>optional string name = 3;</code>
       *
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";

      /**
       * <code>optional string description = 4;</code>
       *
       * @return Whether the description field is set.
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000008) != 0);
      }

      /**
       * <code>optional string description = 4;</code>
       *
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string description = 4;</code>
       *
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string description = 4;</code>
       *
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        description_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      /**
       * <code>optional string description = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        description_ = getDefaultInstance().getDescription();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      /**
       * <code>optional string description = 4;</code>
       *
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        description_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object attribution_ = "";

      /**
       * <code>optional string attribution = 5;</code>
       *
       * @return Whether the attribution field is set.
       */
      public boolean hasAttribution() {
        return ((bitField0_ & 0x00000010) != 0);
      }

      /**
       * <code>optional string attribution = 5;</code>
       *
       * @return The attribution.
       */
      public java.lang.String getAttribution() {
        java.lang.Object ref = attribution_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          attribution_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string attribution = 5;</code>
       *
       * @return The bytes for attribution.
       */
      public com.google.protobuf.ByteString getAttributionBytes() {
        java.lang.Object ref = attribution_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          attribution_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string attribution = 5;</code>
       *
       * @param value The attribution to set.
       * @return This builder for chaining.
       */
      public Builder setAttribution(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        attribution_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      /**
       * <code>optional string attribution = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearAttribution() {
        attribution_ = getDefaultInstance().getAttribution();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      /**
       * <code>optional string attribution = 5;</code>
       *
       * @param value The bytes for attribution to set.
       * @return This builder for chaining.
       */
      public Builder setAttributionBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        attribution_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private int minZoom_;

      /**
       * <code>optional int32 minZoom = 6;</code>
       *
       * @return Whether the minZoom field is set.
       */
      @java.lang.Override
      public boolean hasMinZoom() {
        return ((bitField0_ & 0x00000020) != 0);
      }

      /**
       * <code>optional int32 minZoom = 6;</code>
       *
       * @return The minZoom.
       */
      @java.lang.Override
      public int getMinZoom() {
        return minZoom_;
      }

      /**
       * <code>optional int32 minZoom = 6;</code>
       *
       * @param value The minZoom to set.
       * @return This builder for chaining.
       */
      public Builder setMinZoom(int value) {

        minZoom_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 minZoom = 6;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearMinZoom() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minZoom_ = 0;
        onChanged();
        return this;
      }

      private int maxZoom_;

      /**
       * <code>optional int32 maxZoom = 7;</code>
       *
       * @return Whether the maxZoom field is set.
       */
      @java.lang.Override
      public boolean hasMaxZoom() {
        return ((bitField0_ & 0x00000040) != 0);
      }

      /**
       * <code>optional int32 maxZoom = 7;</code>
       *
       * @return The maxZoom.
       */
      @java.lang.Override
      public int getMaxZoom() {
        return maxZoom_;
      }

      /**
       * <code>optional int32 maxZoom = 7;</code>
       *
       * @param value The maxZoom to set.
       * @return This builder for chaining.
       */
      public Builder setMaxZoom(int value) {

        maxZoom_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      /**
       * <code>optional int32 maxZoom = 7;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearMaxZoom() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxZoom_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList bounds_ = emptyDoubleList();

      private void ensureBoundsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          bounds_ = mutableCopy(bounds_);
          bitField0_ |= 0x00000080;
        }
      }

      /**
       *
       *
       * <pre>
       * order left, bottom, right, top in WGS84
       * </pre>
       *
       * <code>repeated double bounds = 8;</code>
       *
       * @return A list containing the bounds.
       */
      public java.util.List<java.lang.Double> getBoundsList() {
        return ((bitField0_ & 0x00000080) != 0)
            ? java.util.Collections.unmodifiableList(bounds_)
            : bounds_;
      }

      /**
       *
       *
       * <pre>
       * order left, bottom, right, top in WGS84
       * </pre>
       *
       * <code>repeated double bounds = 8;</code>
       *
       * @return The count of bounds.
       */
      public int getBoundsCount() {
        return bounds_.size();
      }

      /**
       *
       *
       * <pre>
       * order left, bottom, right, top in WGS84
       * </pre>
       *
       * <code>repeated double bounds = 8;</code>
       *
       * @param index The index of the element to return.
       * @return The bounds at the given index.
       */
      public double getBounds(int index) {
        return bounds_.getDouble(index);
      }

      /**
       *
       *
       * <pre>
       * order left, bottom, right, top in WGS84
       * </pre>
       *
       * <code>repeated double bounds = 8;</code>
       *
       * @param index The index to set the value at.
       * @param value The bounds to set.
       * @return This builder for chaining.
       */
      public Builder setBounds(int index, double value) {

        ensureBoundsIsMutable();
        bounds_.setDouble(index, value);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * order left, bottom, right, top in WGS84
       * </pre>
       *
       * <code>repeated double bounds = 8;</code>
       *
       * @param value The bounds to add.
       * @return This builder for chaining.
       */
      public Builder addBounds(double value) {

        ensureBoundsIsMutable();
        bounds_.addDouble(value);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * order left, bottom, right, top in WGS84
       * </pre>
       *
       * <code>repeated double bounds = 8;</code>
       *
       * @param values The bounds to add.
       * @return This builder for chaining.
       */
      public Builder addAllBounds(java.lang.Iterable<? extends java.lang.Double> values) {
        ensureBoundsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, bounds_);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * order left, bottom, right, top in WGS84
       * </pre>
       *
       * <code>repeated double bounds = 8;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearBounds() {
        bounds_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList center_ = emptyDoubleList();

      private void ensureCenterIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          center_ = mutableCopy(center_);
          bitField0_ |= 0x00000100;
        }
      }

      /**
       *
       *
       * <pre>
       * order longitude, latitude in WGS84
       * </pre>
       *
       * <code>repeated double center = 9;</code>
       *
       * @return A list containing the center.
       */
      public java.util.List<java.lang.Double> getCenterList() {
        return ((bitField0_ & 0x00000100) != 0)
            ? java.util.Collections.unmodifiableList(center_)
            : center_;
      }

      /**
       *
       *
       * <pre>
       * order longitude, latitude in WGS84
       * </pre>
       *
       * <code>repeated double center = 9;</code>
       *
       * @return The count of center.
       */
      public int getCenterCount() {
        return center_.size();
      }

      /**
       *
       *
       * <pre>
       * order longitude, latitude in WGS84
       * </pre>
       *
       * <code>repeated double center = 9;</code>
       *
       * @param index The index of the element to return.
       * @return The center at the given index.
       */
      public double getCenter(int index) {
        return center_.getDouble(index);
      }

      /**
       *
       *
       * <pre>
       * order longitude, latitude in WGS84
       * </pre>
       *
       * <code>repeated double center = 9;</code>
       *
       * @param index The index to set the value at.
       * @param value The center to set.
       * @return This builder for chaining.
       */
      public Builder setCenter(int index, double value) {

        ensureCenterIsMutable();
        center_.setDouble(index, value);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * order longitude, latitude in WGS84
       * </pre>
       *
       * <code>repeated double center = 9;</code>
       *
       * @param value The center to add.
       * @return This builder for chaining.
       */
      public Builder addCenter(double value) {

        ensureCenterIsMutable();
        center_.addDouble(value);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * order longitude, latitude in WGS84
       * </pre>
       *
       * <code>repeated double center = 9;</code>
       *
       * @param values The center to add.
       * @return This builder for chaining.
       */
      public Builder addAllCenter(java.lang.Iterable<? extends java.lang.Double> values) {
        ensureCenterIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, center_);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * order longitude, latitude in WGS84
       * </pre>
       *
       * <code>repeated double center = 9;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCenter() {
        center_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:mlt.TileSetMetadata)
    }

    // @@protoc_insertion_point(class_scope:mlt.TileSetMetadata)
    private static final org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata();
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TileSetMetadata> PARSER =
        new com.google.protobuf.AbstractParser<TileSetMetadata>() {
          @java.lang.Override
          public TileSetMetadata parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<TileSetMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TileSetMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.TileSetMetadata
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface FeatureTableSchemaOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:mlt.FeatureTableSchema)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    java.lang.String getName();

    /**
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString getNameBytes();

    /** <code>repeated .mlt.Column columns = 2;</code> */
    java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column> getColumnsList();

    /** <code>repeated .mlt.Column columns = 2;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column getColumns(int index);

    /** <code>repeated .mlt.Column columns = 2;</code> */
    int getColumnsCount();

    /** <code>repeated .mlt.Column columns = 2;</code> */
    java.util.List<? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder>
        getColumnsOrBuilderList();

    /** <code>repeated .mlt.Column columns = 2;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder getColumnsOrBuilder(
        int index);
  }

  /** Protobuf type {@code mlt.FeatureTableSchema} */
  public static final class FeatureTableSchema extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:mlt.FeatureTableSchema)
      FeatureTableSchemaOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use FeatureTableSchema.newBuilder() to construct.
    private FeatureTableSchema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private FeatureTableSchema() {
      name_ = "";
      columns_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new FeatureTableSchema();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_FeatureTableSchema_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_FeatureTableSchema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.class,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder
                  .class);
    }

    public static final int NAME_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";

    /**
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }

    /**
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLUMNS_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column> columns_;

    /** <code>repeated .mlt.Column columns = 2;</code> */
    @java.lang.Override
    public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column>
        getColumnsList() {
      return columns_;
    }

    /** <code>repeated .mlt.Column columns = 2;</code> */
    @java.lang.Override
    public java.util.List<
            ? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder>
        getColumnsOrBuilderList() {
      return columns_;
    }

    /** <code>repeated .mlt.Column columns = 2;</code> */
    @java.lang.Override
    public int getColumnsCount() {
      return columns_.size();
    }

    /** <code>repeated .mlt.Column columns = 2;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column getColumns(int index) {
      return columns_.get(index);
    }

    /** <code>repeated .mlt.Column columns = 2;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder getColumnsOrBuilder(
        int index) {
      return columns_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < columns_.size(); i++) {
        output.writeMessage(2, columns_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < columns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, columns_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema)) {
        return super.equals(obj);
      }
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema other =
          (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema) obj;

      if (!getName().equals(other.getName())) return false;
      if (!getColumnsList().equals(other.getColumnsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getColumnsCount() > 0) {
        hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getColumnsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /** Protobuf type {@code mlt.FeatureTableSchema} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:mlt.FeatureTableSchema)
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchemaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_FeatureTableSchema_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_FeatureTableSchema_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.class,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.Builder
                    .class);
      }

      // Construct using
      // org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
        } else {
          columns_ = null;
          columnsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_FeatureTableSchema_descriptor;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
          getDefaultInstanceForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema build() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
          buildPartial() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema result =
            new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema result) {
        if (columnsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            columns_ = java.util.Collections.unmodifiableList(columns_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.columns_ = columns_;
        } else {
          result.columns_ = columnsBuilder_.build();
        }
      }

      private void buildPartial0(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema) {
          return mergeFrom(
              (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema other) {
        if (other
            == org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
                .getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (columnsBuilder_ == null) {
          if (!other.columns_.isEmpty()) {
            if (columns_.isEmpty()) {
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureColumnsIsMutable();
              columns_.addAll(other.columns_);
            }
            onChanged();
          }
        } else {
          if (!other.columns_.isEmpty()) {
            if (columnsBuilder_.isEmpty()) {
              columnsBuilder_.dispose();
              columnsBuilder_ = null;
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000002);
              columnsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getColumnsFieldBuilder()
                      : null;
            } else {
              columnsBuilder_.addAllMessages(other.columns_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column m =
                      input.readMessage(
                          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.parser(),
                          extensionRegistry);
                  if (columnsBuilder_ == null) {
                    ensureColumnsIsMutable();
                    columns_.add(m);
                  } else {
                    columnsBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object name_ = "";

      /**
       * <code>string name = 1;</code>
       *
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>string name = 1;</code>
       *
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>string name = 1;</code>
       *
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       * <code>string name = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      /**
       * <code>string name = 1;</code>
       *
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column> columns_ =
          java.util.Collections.emptyList();

      private void ensureColumnsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          columns_ =
              new java.util.ArrayList<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column>(
                  columns_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder>
          columnsBuilder_;

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column>
          getColumnsList() {
        if (columnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(columns_);
        } else {
          return columnsBuilder_.getMessageList();
        }
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public int getColumnsCount() {
        if (columnsBuilder_ == null) {
          return columns_.size();
        } else {
          return columnsBuilder_.getCount();
        }
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column getColumns(int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);
        } else {
          return columnsBuilder_.getMessage(index);
        }
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder setColumns(
          int index, org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.set(index, value);
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, value);
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder setColumns(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.set(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder addColumns(org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(value);
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder addColumns(
          int index, org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(index, value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, value);
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder addColumns(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder addColumns(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder addAllColumns(
          java.lang.Iterable<? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column>
              values) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, columns_);
          onChanged();
        } else {
          columnsBuilder_.addAllMessages(values);
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder clearColumns() {
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          columnsBuilder_.clear();
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public Builder removeColumns(int index) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.remove(index);
          onChanged();
        } else {
          columnsBuilder_.remove(index);
        }
        return this;
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder getColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().getBuilder(index);
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder
          getColumnsOrBuilder(int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);
        } else {
          return columnsBuilder_.getMessageOrBuilder(index);
        }
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public java.util.List<
              ? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder>
          getColumnsOrBuilderList() {
        if (columnsBuilder_ != null) {
          return columnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(columns_);
        }
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder
          addColumnsBuilder() {
        return getColumnsFieldBuilder()
            .addBuilder(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.getDefaultInstance());
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder addColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder()
            .addBuilder(
                index,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.getDefaultInstance());
      }

      /** <code>repeated .mlt.Column columns = 2;</code> */
      public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder>
          getColumnsBuilderList() {
        return getColumnsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder>
          getColumnsFieldBuilder() {
        if (columnsBuilder_ == null) {
          columnsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder>(
                  columns_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
          columns_ = null;
        }
        return columnsBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:mlt.FeatureTableSchema)
    }

    // @@protoc_insertion_point(class_scope:mlt.FeatureTableSchema)
    private static final org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema();
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FeatureTableSchema> PARSER =
        new com.google.protobuf.AbstractParser<FeatureTableSchema>() {
          @java.lang.Override
          public FeatureTableSchema parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<FeatureTableSchema> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FeatureTableSchema> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FeatureTableSchema
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ColumnOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:mlt.Column)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    java.lang.String getName();

    /**
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString getNameBytes();

    /**
     *
     *
     * <pre>
     * specifies if the values are optional in the column and a present stream should be used
     * </pre>
     *
     * <code>bool nullable = 2;</code>
     *
     * @return The nullable.
     */
    boolean getNullable();

    /**
     * <code>.mlt.ColumnScope columnScope = 3;</code>
     *
     * @return The enum numeric value on the wire for columnScope.
     */
    int getColumnScopeValue();

    /**
     * <code>.mlt.ColumnScope columnScope = 3;</code>
     *
     * @return The columnScope.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope getColumnScope();

    /**
     * <code>.mlt.ScalarColumn scalarType = 4;</code>
     *
     * @return Whether the scalarType field is set.
     */
    boolean hasScalarType();

    /**
     * <code>.mlt.ScalarColumn scalarType = 4;</code>
     *
     * @return The scalarType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn getScalarType();

    /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumnOrBuilder
        getScalarTypeOrBuilder();

    /**
     * <code>.mlt.ComplexColumn complexType = 5;</code>
     *
     * @return Whether the complexType field is set.
     */
    boolean hasComplexType();

    /**
     * <code>.mlt.ComplexColumn complexType = 5;</code>
     *
     * @return The complexType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn getComplexType();

    /** <code>.mlt.ComplexColumn complexType = 5;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumnOrBuilder
        getComplexTypeOrBuilder();

    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.TypeCase getTypeCase();
  }

  /**
   *
   *
   * <pre>
   * Column are top-level types in the schema
   * </pre>
   *
   * Protobuf type {@code mlt.Column}
   */
  public static final class Column extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:mlt.Column)
      ColumnOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use Column.newBuilder() to construct.
    private Column(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Column() {
      name_ = "";
      columnScope_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Column();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_Column_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_Column_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.class,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder.class);
    }

    private int typeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object type_;

    public enum TypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SCALARTYPE(4),
      COMPLEXTYPE(5),
      TYPE_NOT_SET(0);
      private final int value;

      private TypeCase(int value) {
        this.value = value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 4:
            return SCALARTYPE;
          case 5:
            return COMPLEXTYPE;
          case 0:
            return TYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public static final int NAME_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";

    /**
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }

    /**
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NULLABLE_FIELD_NUMBER = 2;
    private boolean nullable_ = false;

    /**
     *
     *
     * <pre>
     * specifies if the values are optional in the column and a present stream should be used
     * </pre>
     *
     * <code>bool nullable = 2;</code>
     *
     * @return The nullable.
     */
    @java.lang.Override
    public boolean getNullable() {
      return nullable_;
    }

    public static final int COLUMNSCOPE_FIELD_NUMBER = 3;
    private int columnScope_ = 0;

    /**
     * <code>.mlt.ColumnScope columnScope = 3;</code>
     *
     * @return The enum numeric value on the wire for columnScope.
     */
    @java.lang.Override
    public int getColumnScopeValue() {
      return columnScope_;
    }

    /**
     * <code>.mlt.ColumnScope columnScope = 3;</code>
     *
     * @return The columnScope.
     */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope getColumnScope() {
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope result =
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope.forNumber(columnScope_);
      return result == null
          ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope.UNRECOGNIZED
          : result;
    }

    public static final int SCALARTYPE_FIELD_NUMBER = 4;

    /**
     * <code>.mlt.ScalarColumn scalarType = 4;</code>
     *
     * @return Whether the scalarType field is set.
     */
    @java.lang.Override
    public boolean hasScalarType() {
      return typeCase_ == 4;
    }

    /**
     * <code>.mlt.ScalarColumn scalarType = 4;</code>
     *
     * @return The scalarType.
     */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn getScalarType() {
      if (typeCase_ == 4) {
        return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) type_;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.getDefaultInstance();
    }

    /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumnOrBuilder
        getScalarTypeOrBuilder() {
      if (typeCase_ == 4) {
        return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) type_;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.getDefaultInstance();
    }

    public static final int COMPLEXTYPE_FIELD_NUMBER = 5;

    /**
     * <code>.mlt.ComplexColumn complexType = 5;</code>
     *
     * @return Whether the complexType field is set.
     */
    @java.lang.Override
    public boolean hasComplexType() {
      return typeCase_ == 5;
    }

    /**
     * <code>.mlt.ComplexColumn complexType = 5;</code>
     *
     * @return The complexType.
     */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn getComplexType() {
      if (typeCase_ == 5) {
        return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) type_;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
          .getDefaultInstance();
    }

    /** <code>.mlt.ComplexColumn complexType = 5;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumnOrBuilder
        getComplexTypeOrBuilder() {
      if (typeCase_ == 5) {
        return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) type_;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
          .getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (nullable_ != false) {
        output.writeBool(2, nullable_);
      }
      if (columnScope_
          != org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope.FEATURE.getNumber()) {
        output.writeEnum(3, columnScope_);
      }
      if (typeCase_ == 4) {
        output.writeMessage(
            4, (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) type_);
      }
      if (typeCase_ == 5) {
        output.writeMessage(
            5, (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (nullable_ != false) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, nullable_);
      }
      if (columnScope_
          != org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope.FEATURE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, columnScope_);
      }
      if (typeCase_ == 4) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                4, (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) type_);
      }
      if (typeCase_ == 5) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                5, (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column)) {
        return super.equals(obj);
      }
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column other =
          (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column) obj;

      if (!getName().equals(other.getName())) return false;
      if (getNullable() != other.getNullable()) return false;
      if (columnScope_ != other.columnScope_) return false;
      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 4:
          if (!getScalarType().equals(other.getScalarType())) return false;
          break;
        case 5:
          if (!getComplexType().equals(other.getComplexType())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + NULLABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getNullable());
      hash = (37 * hash) + COLUMNSCOPE_FIELD_NUMBER;
      hash = (53 * hash) + columnScope_;
      switch (typeCase_) {
        case 4:
          hash = (37 * hash) + SCALARTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getScalarType().hashCode();
          break;
        case 5:
          hash = (37 * hash) + COMPLEXTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getComplexType().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * Column are top-level types in the schema
     * </pre>
     *
     * Protobuf type {@code mlt.Column}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:mlt.Column)
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_Column_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_Column_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.class,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.Builder.class);
      }

      // Construct using org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        nullable_ = false;
        columnScope_ = 0;
        if (scalarTypeBuilder_ != null) {
          scalarTypeBuilder_.clear();
        }
        if (complexTypeBuilder_ != null) {
          complexTypeBuilder_.clear();
        }
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_Column_descriptor;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column
          getDefaultInstanceForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.getDefaultInstance();
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column build() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column buildPartial() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column result =
            new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.nullable_ = nullable_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.columnScope_ = columnScope_;
        }
      }

      private void buildPartialOneofs(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
        if (typeCase_ == 4 && scalarTypeBuilder_ != null) {
          result.type_ = scalarTypeBuilder_.build();
        }
        if (typeCase_ == 5 && complexTypeBuilder_ != null) {
          result.type_ = complexTypeBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column) {
          return mergeFrom((org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column other) {
        if (other
            == org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column.getDefaultInstance())
          return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getNullable() != false) {
          setNullable(other.getNullable());
        }
        if (other.columnScope_ != 0) {
          setColumnScopeValue(other.getColumnScopeValue());
        }
        switch (other.getTypeCase()) {
          case SCALARTYPE:
            {
              mergeScalarType(other.getScalarType());
              break;
            }
          case COMPLEXTYPE:
            {
              mergeComplexType(other.getComplexType());
              break;
            }
          case TYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 16:
                {
                  nullable_ = input.readBool();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              case 24:
                {
                  columnScope_ = input.readEnum();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
              case 34:
                {
                  input.readMessage(getScalarTypeFieldBuilder().getBuilder(), extensionRegistry);
                  typeCase_ = 4;
                  break;
                } // case 34
              case 42:
                {
                  input.readMessage(getComplexTypeFieldBuilder().getBuilder(), extensionRegistry);
                  typeCase_ = 5;
                  break;
                } // case 42
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;

      public TypeCase getTypeCase() {
        return TypeCase.forNumber(typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object name_ = "";

      /**
       * <code>string name = 1;</code>
       *
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>string name = 1;</code>
       *
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>string name = 1;</code>
       *
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       * <code>string name = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      /**
       * <code>string name = 1;</code>
       *
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private boolean nullable_;

      /**
       *
       *
       * <pre>
       * specifies if the values are optional in the column and a present stream should be used
       * </pre>
       *
       * <code>bool nullable = 2;</code>
       *
       * @return The nullable.
       */
      @java.lang.Override
      public boolean getNullable() {
        return nullable_;
      }

      /**
       *
       *
       * <pre>
       * specifies if the values are optional in the column and a present stream should be used
       * </pre>
       *
       * <code>bool nullable = 2;</code>
       *
       * @param value The nullable to set.
       * @return This builder for chaining.
       */
      public Builder setNullable(boolean value) {

        nullable_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * specifies if the values are optional in the column and a present stream should be used
       * </pre>
       *
       * <code>bool nullable = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearNullable() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nullable_ = false;
        onChanged();
        return this;
      }

      private int columnScope_ = 0;

      /**
       * <code>.mlt.ColumnScope columnScope = 3;</code>
       *
       * @return The enum numeric value on the wire for columnScope.
       */
      @java.lang.Override
      public int getColumnScopeValue() {
        return columnScope_;
      }

      /**
       * <code>.mlt.ColumnScope columnScope = 3;</code>
       *
       * @param value The enum numeric value on the wire for columnScope to set.
       * @return This builder for chaining.
       */
      public Builder setColumnScopeValue(int value) {
        columnScope_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ColumnScope columnScope = 3;</code>
       *
       * @return The columnScope.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope getColumnScope() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope.forNumber(
                columnScope_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope.UNRECOGNIZED
            : result;
      }

      /**
       * <code>.mlt.ColumnScope columnScope = 3;</code>
       *
       * @param value The columnScope to set.
       * @return This builder for chaining.
       */
      public Builder setColumnScope(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ColumnScope value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        columnScope_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ColumnScope columnScope = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearColumnScope() {
        bitField0_ = (bitField0_ & ~0x00000004);
        columnScope_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumnOrBuilder>
          scalarTypeBuilder_;

      /**
       * <code>.mlt.ScalarColumn scalarType = 4;</code>
       *
       * @return Whether the scalarType field is set.
       */
      @java.lang.Override
      public boolean hasScalarType() {
        return typeCase_ == 4;
      }

      /**
       * <code>.mlt.ScalarColumn scalarType = 4;</code>
       *
       * @return The scalarType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn getScalarType() {
        if (scalarTypeBuilder_ == null) {
          if (typeCase_ == 4) {
            return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) type_;
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
              .getDefaultInstance();
        } else {
          if (typeCase_ == 4) {
            return scalarTypeBuilder_.getMessage();
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
              .getDefaultInstance();
        }
      }

      /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
      public Builder setScalarType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn value) {
        if (scalarTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          scalarTypeBuilder_.setMessage(value);
        }
        typeCase_ = 4;
        return this;
      }

      /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
      public Builder setScalarType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.Builder
              builderForValue) {
        if (scalarTypeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          scalarTypeBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 4;
        return this;
      }

      /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
      public Builder mergeScalarType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn value) {
        if (scalarTypeBuilder_ == null) {
          if (typeCase_ == 4
              && type_
                  != org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
                      .getDefaultInstance()) {
            type_ =
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.newBuilder(
                        (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) type_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 4) {
            scalarTypeBuilder_.mergeFrom(value);
          } else {
            scalarTypeBuilder_.setMessage(value);
          }
        }
        typeCase_ = 4;
        return this;
      }

      /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
      public Builder clearScalarType() {
        if (scalarTypeBuilder_ == null) {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
          }
          scalarTypeBuilder_.clear();
        }
        return this;
      }

      /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.Builder
          getScalarTypeBuilder() {
        return getScalarTypeFieldBuilder().getBuilder();
      }

      /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumnOrBuilder
          getScalarTypeOrBuilder() {
        if ((typeCase_ == 4) && (scalarTypeBuilder_ != null)) {
          return scalarTypeBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 4) {
            return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) type_;
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
              .getDefaultInstance();
        }
      }

      /** <code>.mlt.ScalarColumn scalarType = 4;</code> */
      private com.google.protobuf.SingleFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumnOrBuilder>
          getScalarTypeFieldBuilder() {
        if (scalarTypeBuilder_ == null) {
          if (!(typeCase_ == 4)) {
            type_ =
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
                    .getDefaultInstance();
          }
          scalarTypeBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.Builder,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumnOrBuilder>(
                  (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 4;
        onChanged();
        return scalarTypeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumnOrBuilder>
          complexTypeBuilder_;

      /**
       * <code>.mlt.ComplexColumn complexType = 5;</code>
       *
       * @return Whether the complexType field is set.
       */
      @java.lang.Override
      public boolean hasComplexType() {
        return typeCase_ == 5;
      }

      /**
       * <code>.mlt.ComplexColumn complexType = 5;</code>
       *
       * @return The complexType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn getComplexType() {
        if (complexTypeBuilder_ == null) {
          if (typeCase_ == 5) {
            return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) type_;
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
              .getDefaultInstance();
        } else {
          if (typeCase_ == 5) {
            return complexTypeBuilder_.getMessage();
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
              .getDefaultInstance();
        }
      }

      /** <code>.mlt.ComplexColumn complexType = 5;</code> */
      public Builder setComplexType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn value) {
        if (complexTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          complexTypeBuilder_.setMessage(value);
        }
        typeCase_ = 5;
        return this;
      }

      /** <code>.mlt.ComplexColumn complexType = 5;</code> */
      public Builder setComplexType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.Builder
              builderForValue) {
        if (complexTypeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          complexTypeBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 5;
        return this;
      }

      /** <code>.mlt.ComplexColumn complexType = 5;</code> */
      public Builder mergeComplexType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn value) {
        if (complexTypeBuilder_ == null) {
          if (typeCase_ == 5
              && type_
                  != org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
                      .getDefaultInstance()) {
            type_ =
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.newBuilder(
                        (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) type_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 5) {
            complexTypeBuilder_.mergeFrom(value);
          } else {
            complexTypeBuilder_.setMessage(value);
          }
        }
        typeCase_ = 5;
        return this;
      }

      /** <code>.mlt.ComplexColumn complexType = 5;</code> */
      public Builder clearComplexType() {
        if (complexTypeBuilder_ == null) {
          if (typeCase_ == 5) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 5) {
            typeCase_ = 0;
            type_ = null;
          }
          complexTypeBuilder_.clear();
        }
        return this;
      }

      /** <code>.mlt.ComplexColumn complexType = 5;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.Builder
          getComplexTypeBuilder() {
        return getComplexTypeFieldBuilder().getBuilder();
      }

      /** <code>.mlt.ComplexColumn complexType = 5;</code> */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumnOrBuilder
          getComplexTypeOrBuilder() {
        if ((typeCase_ == 5) && (complexTypeBuilder_ != null)) {
          return complexTypeBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 5) {
            return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) type_;
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
              .getDefaultInstance();
        }
      }

      /** <code>.mlt.ComplexColumn complexType = 5;</code> */
      private com.google.protobuf.SingleFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumnOrBuilder>
          getComplexTypeFieldBuilder() {
        if (complexTypeBuilder_ == null) {
          if (!(typeCase_ == 5)) {
            type_ =
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
                    .getDefaultInstance();
          }
          complexTypeBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.Builder,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumnOrBuilder>(
                  (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 5;
        onChanged();
        return complexTypeBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:mlt.Column)
    }

    // @@protoc_insertion_point(class_scope:mlt.Column)
    private static final org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column();
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Column> PARSER =
        new com.google.protobuf.AbstractParser<Column>() {
          @java.lang.Override
          public Column parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Column> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Column> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Column getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ScalarColumnOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:mlt.ScalarColumn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.mlt.ScalarType physicalType = 4;</code>
     *
     * @return Whether the physicalType field is set.
     */
    boolean hasPhysicalType();

    /**
     * <code>.mlt.ScalarType physicalType = 4;</code>
     *
     * @return The enum numeric value on the wire for physicalType.
     */
    int getPhysicalTypeValue();

    /**
     * <code>.mlt.ScalarType physicalType = 4;</code>
     *
     * @return The physicalType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType getPhysicalType();

    /**
     * <code>.mlt.LogicalScalarType logicalType = 5;</code>
     *
     * @return Whether the logicalType field is set.
     */
    boolean hasLogicalType();

    /**
     * <code>.mlt.LogicalScalarType logicalType = 5;</code>
     *
     * @return The enum numeric value on the wire for logicalType.
     */
    int getLogicalTypeValue();

    /**
     * <code>.mlt.LogicalScalarType logicalType = 5;</code>
     *
     * @return The logicalType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType getLogicalType();

    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.TypeCase getTypeCase();
  }

  /** Protobuf type {@code mlt.ScalarColumn} */
  public static final class ScalarColumn extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:mlt.ScalarColumn)
      ScalarColumnOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use ScalarColumn.newBuilder() to construct.
    private ScalarColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ScalarColumn() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ScalarColumn();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_ScalarColumn_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_ScalarColumn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.class,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.Builder.class);
    }

    private int typeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object type_;

    public enum TypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PHYSICALTYPE(4),
      LOGICALTYPE(5),
      TYPE_NOT_SET(0);
      private final int value;

      private TypeCase(int value) {
        this.value = value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 4:
            return PHYSICALTYPE;
          case 5:
            return LOGICALTYPE;
          case 0:
            return TYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public static final int PHYSICALTYPE_FIELD_NUMBER = 4;

    /**
     * <code>.mlt.ScalarType physicalType = 4;</code>
     *
     * @return Whether the physicalType field is set.
     */
    public boolean hasPhysicalType() {
      return typeCase_ == 4;
    }

    /**
     * <code>.mlt.ScalarType physicalType = 4;</code>
     *
     * @return The enum numeric value on the wire for physicalType.
     */
    public int getPhysicalTypeValue() {
      if (typeCase_ == 4) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    /**
     * <code>.mlt.ScalarType physicalType = 4;</code>
     *
     * @return The physicalType.
     */
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType getPhysicalType() {
      if (typeCase_ == 4) {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.forNumber(
                (java.lang.Integer) type_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.UNRECOGNIZED
            : result;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.BOOLEAN;
    }

    public static final int LOGICALTYPE_FIELD_NUMBER = 5;

    /**
     * <code>.mlt.LogicalScalarType logicalType = 5;</code>
     *
     * @return Whether the logicalType field is set.
     */
    public boolean hasLogicalType() {
      return typeCase_ == 5;
    }

    /**
     * <code>.mlt.LogicalScalarType logicalType = 5;</code>
     *
     * @return The enum numeric value on the wire for logicalType.
     */
    public int getLogicalTypeValue() {
      if (typeCase_ == 5) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    /**
     * <code>.mlt.LogicalScalarType logicalType = 5;</code>
     *
     * @return The logicalType.
     */
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType getLogicalType() {
      if (typeCase_ == 5) {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.forNumber(
                (java.lang.Integer) type_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.UNRECOGNIZED
            : result;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.TIMESTAMP;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (typeCase_ == 4) {
        output.writeEnum(4, ((java.lang.Integer) type_));
      }
      if (typeCase_ == 5) {
        output.writeEnum(5, ((java.lang.Integer) type_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 4) {
        size +=
            com.google.protobuf.CodedOutputStream.computeEnumSize(4, ((java.lang.Integer) type_));
      }
      if (typeCase_ == 5) {
        size +=
            com.google.protobuf.CodedOutputStream.computeEnumSize(5, ((java.lang.Integer) type_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn)) {
        return super.equals(obj);
      }
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn other =
          (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 4:
          if (getPhysicalTypeValue() != other.getPhysicalTypeValue()) return false;
          break;
        case 5:
          if (getLogicalTypeValue() != other.getLogicalTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 4:
          hash = (37 * hash) + PHYSICALTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getPhysicalTypeValue();
          break;
        case 5:
          hash = (37 * hash) + LOGICALTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getLogicalTypeValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /** Protobuf type {@code mlt.ScalarColumn} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:mlt.ScalarColumn)
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ScalarColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ScalarColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.class,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.Builder.class);
      }

      // Construct using
      // org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ScalarColumn_descriptor;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
          getDefaultInstanceForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn build() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn buildPartial() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn result =
            new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) {
          return mergeFrom(
              (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn other) {
        if (other
            == org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
                .getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case PHYSICALTYPE:
            {
              setPhysicalTypeValue(other.getPhysicalTypeValue());
              break;
            }
          case LOGICALTYPE:
            {
              setLogicalTypeValue(other.getLogicalTypeValue());
              break;
            }
          case TYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 32:
                {
                  int rawValue = input.readEnum();
                  typeCase_ = 4;
                  type_ = rawValue;
                  break;
                } // case 32
              case 40:
                {
                  int rawValue = input.readEnum();
                  typeCase_ = 5;
                  type_ = rawValue;
                  break;
                } // case 40
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;

      public TypeCase getTypeCase() {
        return TypeCase.forNumber(typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>.mlt.ScalarType physicalType = 4;</code>
       *
       * @return Whether the physicalType field is set.
       */
      @java.lang.Override
      public boolean hasPhysicalType() {
        return typeCase_ == 4;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 4;</code>
       *
       * @return The enum numeric value on the wire for physicalType.
       */
      @java.lang.Override
      public int getPhysicalTypeValue() {
        if (typeCase_ == 4) {
          return ((java.lang.Integer) type_).intValue();
        }
        return 0;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 4;</code>
       *
       * @param value The enum numeric value on the wire for physicalType to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalTypeValue(int value) {
        typeCase_ = 4;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 4;</code>
       *
       * @return The physicalType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType getPhysicalType() {
        if (typeCase_ == 4) {
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType result =
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.forNumber(
                  (java.lang.Integer) type_);
          return result == null
              ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.UNRECOGNIZED
              : result;
        }
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.BOOLEAN;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 4;</code>
       *
       * @param value The physicalType to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeCase_ = 4;
        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearPhysicalType() {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 5;</code>
       *
       * @return Whether the logicalType field is set.
       */
      @java.lang.Override
      public boolean hasLogicalType() {
        return typeCase_ == 5;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 5;</code>
       *
       * @return The enum numeric value on the wire for logicalType.
       */
      @java.lang.Override
      public int getLogicalTypeValue() {
        if (typeCase_ == 5) {
          return ((java.lang.Integer) type_).intValue();
        }
        return 0;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 5;</code>
       *
       * @param value The enum numeric value on the wire for logicalType to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalTypeValue(int value) {
        typeCase_ = 5;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 5;</code>
       *
       * @return The logicalType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType
          getLogicalType() {
        if (typeCase_ == 5) {
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType result =
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.forNumber(
                  (java.lang.Integer) type_);
          return result == null
              ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.UNRECOGNIZED
              : result;
        }
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.TIMESTAMP;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 5;</code>
       *
       * @param value The logicalType to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeCase_ = 5;
        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLogicalType() {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:mlt.ScalarColumn)
    }

    // @@protoc_insertion_point(class_scope:mlt.ScalarColumn)
    private static final org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn();
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScalarColumn> PARSER =
        new com.google.protobuf.AbstractParser<ScalarColumn>() {
          @java.lang.Override
          public ScalarColumn parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ScalarColumn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScalarColumn> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarColumn
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ComplexColumnOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:mlt.ComplexColumn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.mlt.ComplexType physicalType = 4;</code>
     *
     * @return Whether the physicalType field is set.
     */
    boolean hasPhysicalType();

    /**
     * <code>.mlt.ComplexType physicalType = 4;</code>
     *
     * @return The enum numeric value on the wire for physicalType.
     */
    int getPhysicalTypeValue();

    /**
     * <code>.mlt.ComplexType physicalType = 4;</code>
     *
     * @return The physicalType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType getPhysicalType();

    /**
     * <code>.mlt.LogicalComplexType logicalType = 5;</code>
     *
     * @return Whether the logicalType field is set.
     */
    boolean hasLogicalType();

    /**
     * <code>.mlt.LogicalComplexType logicalType = 5;</code>
     *
     * @return The enum numeric value on the wire for logicalType.
     */
    int getLogicalTypeValue();

    /**
     * <code>.mlt.LogicalComplexType logicalType = 5;</code>
     *
     * @return The logicalType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType getLogicalType();

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field> getChildrenList();

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field getChildren(int index);

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    int getChildrenCount();

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    java.util.List<? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
        getChildrenOrBuilderList();

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder getChildrenOrBuilder(
        int index);

    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.TypeCase getTypeCase();
  }

  /**
   *
   *
   * <pre>
   * The type tree is flattened in to a list via a pre-order traversal
   * Represents a column if it is a root (top-level) type or a child of a nested type
   * </pre>
   *
   * Protobuf type {@code mlt.ComplexColumn}
   */
  public static final class ComplexColumn extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:mlt.ComplexColumn)
      ComplexColumnOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use ComplexColumn.newBuilder() to construct.
    private ComplexColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ComplexColumn() {
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ComplexColumn();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_ComplexColumn_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_ComplexColumn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.class,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.Builder.class);
    }

    private int typeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object type_;

    public enum TypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PHYSICALTYPE(4),
      LOGICALTYPE(5),
      TYPE_NOT_SET(0);
      private final int value;

      private TypeCase(int value) {
        this.value = value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 4:
            return PHYSICALTYPE;
          case 5:
            return LOGICALTYPE;
          case 0:
            return TYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public static final int PHYSICALTYPE_FIELD_NUMBER = 4;

    /**
     * <code>.mlt.ComplexType physicalType = 4;</code>
     *
     * @return Whether the physicalType field is set.
     */
    public boolean hasPhysicalType() {
      return typeCase_ == 4;
    }

    /**
     * <code>.mlt.ComplexType physicalType = 4;</code>
     *
     * @return The enum numeric value on the wire for physicalType.
     */
    public int getPhysicalTypeValue() {
      if (typeCase_ == 4) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    /**
     * <code>.mlt.ComplexType physicalType = 4;</code>
     *
     * @return The physicalType.
     */
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType getPhysicalType() {
      if (typeCase_ == 4) {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.forNumber(
                (java.lang.Integer) type_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.UNRECOGNIZED
            : result;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.VEC_2;
    }

    public static final int LOGICALTYPE_FIELD_NUMBER = 5;

    /**
     * <code>.mlt.LogicalComplexType logicalType = 5;</code>
     *
     * @return Whether the logicalType field is set.
     */
    public boolean hasLogicalType() {
      return typeCase_ == 5;
    }

    /**
     * <code>.mlt.LogicalComplexType logicalType = 5;</code>
     *
     * @return The enum numeric value on the wire for logicalType.
     */
    public int getLogicalTypeValue() {
      if (typeCase_ == 5) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    /**
     * <code>.mlt.LogicalComplexType logicalType = 5;</code>
     *
     * @return The logicalType.
     */
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType
        getLogicalType() {
      if (typeCase_ == 5) {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.forNumber(
                (java.lang.Integer) type_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.UNRECOGNIZED
            : result;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.BINARY;
    }

    public static final int CHILDREN_FIELD_NUMBER = 6;

    @SuppressWarnings("serial")
    private java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field> children_;

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field>
        getChildrenList() {
      return children_;
    }

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
        getChildrenOrBuilderList() {
      return children_;
    }

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    @java.lang.Override
    public int getChildrenCount() {
      return children_.size();
    }

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field getChildren(int index) {
      return children_.get(index);
    }

    /**
     *
     *
     * <pre>
     * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
     * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
     * </pre>
     *
     * <code>repeated .mlt.Field children = 6;</code>
     */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (typeCase_ == 4) {
        output.writeEnum(4, ((java.lang.Integer) type_));
      }
      if (typeCase_ == 5) {
        output.writeEnum(5, ((java.lang.Integer) type_));
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(6, children_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 4) {
        size +=
            com.google.protobuf.CodedOutputStream.computeEnumSize(4, ((java.lang.Integer) type_));
      }
      if (typeCase_ == 5) {
        size +=
            com.google.protobuf.CodedOutputStream.computeEnumSize(5, ((java.lang.Integer) type_));
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, children_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn)) {
        return super.equals(obj);
      }
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn other =
          (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) obj;

      if (!getChildrenList().equals(other.getChildrenList())) return false;
      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 4:
          if (getPhysicalTypeValue() != other.getPhysicalTypeValue()) return false;
          break;
        case 5:
          if (getLogicalTypeValue() != other.getLogicalTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      switch (typeCase_) {
        case 4:
          hash = (37 * hash) + PHYSICALTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getPhysicalTypeValue();
          break;
        case 5:
          hash = (37 * hash) + LOGICALTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getLogicalTypeValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * The type tree is flattened in to a list via a pre-order traversal
     * Represents a column if it is a root (top-level) type or a child of a nested type
     * </pre>
     *
     * Protobuf type {@code mlt.ComplexColumn}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:mlt.ComplexColumn)
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ComplexColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ComplexColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.class,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.Builder.class);
      }

      // Construct using
      // org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
        } else {
          children_ = null;
          childrenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ComplexColumn_descriptor;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
          getDefaultInstanceForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn build() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn buildPartial() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn result =
            new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn result) {
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
      }

      private void buildPartial0(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) {
          return mergeFrom(
              (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn other) {
        if (other
            == org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
                .getDefaultInstance()) return this;
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000004);
              childrenBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getChildrenFieldBuilder()
                      : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        switch (other.getTypeCase()) {
          case PHYSICALTYPE:
            {
              setPhysicalTypeValue(other.getPhysicalTypeValue());
              break;
            }
          case LOGICALTYPE:
            {
              setLogicalTypeValue(other.getLogicalTypeValue());
              break;
            }
          case TYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 32:
                {
                  int rawValue = input.readEnum();
                  typeCase_ = 4;
                  type_ = rawValue;
                  break;
                } // case 32
              case 40:
                {
                  int rawValue = input.readEnum();
                  typeCase_ = 5;
                  type_ = rawValue;
                  break;
                } // case 40
              case 50:
                {
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field m =
                      input.readMessage(
                          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.parser(),
                          extensionRegistry);
                  if (childrenBuilder_ == null) {
                    ensureChildrenIsMutable();
                    children_.add(m);
                  } else {
                    childrenBuilder_.addMessage(m);
                  }
                  break;
                } // case 50
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;

      public TypeCase getTypeCase() {
        return TypeCase.forNumber(typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>.mlt.ComplexType physicalType = 4;</code>
       *
       * @return Whether the physicalType field is set.
       */
      @java.lang.Override
      public boolean hasPhysicalType() {
        return typeCase_ == 4;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 4;</code>
       *
       * @return The enum numeric value on the wire for physicalType.
       */
      @java.lang.Override
      public int getPhysicalTypeValue() {
        if (typeCase_ == 4) {
          return ((java.lang.Integer) type_).intValue();
        }
        return 0;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 4;</code>
       *
       * @param value The enum numeric value on the wire for physicalType to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalTypeValue(int value) {
        typeCase_ = 4;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 4;</code>
       *
       * @return The physicalType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType getPhysicalType() {
        if (typeCase_ == 4) {
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType result =
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.forNumber(
                  (java.lang.Integer) type_);
          return result == null
              ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.UNRECOGNIZED
              : result;
        }
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.VEC_2;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 4;</code>
       *
       * @param value The physicalType to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeCase_ = 4;
        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearPhysicalType() {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 5;</code>
       *
       * @return Whether the logicalType field is set.
       */
      @java.lang.Override
      public boolean hasLogicalType() {
        return typeCase_ == 5;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 5;</code>
       *
       * @return The enum numeric value on the wire for logicalType.
       */
      @java.lang.Override
      public int getLogicalTypeValue() {
        if (typeCase_ == 5) {
          return ((java.lang.Integer) type_).intValue();
        }
        return 0;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 5;</code>
       *
       * @param value The enum numeric value on the wire for logicalType to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalTypeValue(int value) {
        typeCase_ = 5;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 5;</code>
       *
       * @return The logicalType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType
          getLogicalType() {
        if (typeCase_ == 5) {
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType result =
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.forNumber(
                  (java.lang.Integer) type_);
          return result == null
              ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.UNRECOGNIZED
              : result;
        }
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.BINARY;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 5;</code>
       *
       * @param value The logicalType to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeCase_ = 5;
        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLogicalType() {
        if (typeCase_ == 5) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      private java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field> children_ =
          java.util.Collections.emptyList();

      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          children_ =
              new java.util.ArrayList<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field>(
                  children_);
          bitField0_ |= 0x00000004;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
          childrenBuilder_;

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field>
          getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder setChildren(
          int index, org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder setChildren(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder addChildren(org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder addChildren(
          int index, org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder addChildren(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder addChildren(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field>
              values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder
          getChildrenOrBuilder(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public java.util.List<
              ? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
          getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder
          addChildrenBuilder() {
        return getChildrenFieldBuilder()
            .addBuilder(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.getDefaultInstance());
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder()
            .addBuilder(
                index,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.getDefaultInstance());
      }

      /**
       *
       *
       * <pre>
       * The complex type Geometry and the logical type BINARY have no children since there layout is implicit known.
       * RangeMap has only one child specifying the type of the value since the key is always a vec2&lt;double&gt;.
       * </pre>
       *
       * <code>repeated .mlt.Field children = 6;</code>
       */
      public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder>
          getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>(
                  children_, ((bitField0_ & 0x00000004) != 0), getParentForChildren(), isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:mlt.ComplexColumn)
    }

    // @@protoc_insertion_point(class_scope:mlt.ComplexColumn)
    private static final org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn();
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComplexColumn> PARSER =
        new com.google.protobuf.AbstractParser<ComplexColumn>() {
          @java.lang.Override
          public ComplexColumn parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ComplexColumn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComplexColumn> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexColumn
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface FieldOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:mlt.Field)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * name and nullable are only needed in combination with a struct not for vec, list and map
     * Map -&gt; has the order key type, value type
     * </pre>
     *
     * <code>optional string name = 1;</code>
     *
     * @return Whether the name field is set.
     */
    boolean hasName();

    /**
     *
     *
     * <pre>
     * name and nullable are only needed in combination with a struct not for vec, list and map
     * Map -&gt; has the order key type, value type
     * </pre>
     *
     * <code>optional string name = 1;</code>
     *
     * @return The name.
     */
    java.lang.String getName();

    /**
     *
     *
     * <pre>
     * name and nullable are only needed in combination with a struct not for vec, list and map
     * Map -&gt; has the order key type, value type
     * </pre>
     *
     * <code>optional string name = 1;</code>
     *
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString getNameBytes();

    /**
     * <code>optional bool nullable = 2;</code>
     *
     * @return Whether the nullable field is set.
     */
    boolean hasNullable();

    /**
     * <code>optional bool nullable = 2;</code>
     *
     * @return The nullable.
     */
    boolean getNullable();

    /**
     * <code>.mlt.ScalarField scalarField = 3;</code>
     *
     * @return Whether the scalarField field is set.
     */
    boolean hasScalarField();

    /**
     * <code>.mlt.ScalarField scalarField = 3;</code>
     *
     * @return The scalarField.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField getScalarField();

    /** <code>.mlt.ScalarField scalarField = 3;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarFieldOrBuilder
        getScalarFieldOrBuilder();

    /**
     * <code>.mlt.ComplexField complexField = 4;</code>
     *
     * @return Whether the complexField field is set.
     */
    boolean hasComplexField();

    /**
     * <code>.mlt.ComplexField complexField = 4;</code>
     *
     * @return The complexField.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField getComplexField();

    /** <code>.mlt.ComplexField complexField = 4;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexFieldOrBuilder
        getComplexFieldOrBuilder();

    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.TypeCase getTypeCase();
  }

  /**
   *
   *
   * <pre>
   * Fields define nested or leaf types in the schema as part of a complex type definition
   * </pre>
   *
   * Protobuf type {@code mlt.Field}
   */
  public static final class Field extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:mlt.Field)
      FieldOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use Field.newBuilder() to construct.
    private Field(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Field() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Field();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_Field_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_Field_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.class,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder.class);
    }

    private int bitField0_;
    private int typeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object type_;

    public enum TypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SCALARFIELD(3),
      COMPLEXFIELD(4),
      TYPE_NOT_SET(0);
      private final int value;

      private TypeCase(int value) {
        this.value = value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 3:
            return SCALARFIELD;
          case 4:
            return COMPLEXFIELD;
          case 0:
            return TYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public static final int NAME_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";

    /**
     *
     *
     * <pre>
     * name and nullable are only needed in combination with a struct not for vec, list and map
     * Map -&gt; has the order key type, value type
     * </pre>
     *
     * <code>optional string name = 1;</code>
     *
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * name and nullable are only needed in combination with a struct not for vec, list and map
     * Map -&gt; has the order key type, value type
     * </pre>
     *
     * <code>optional string name = 1;</code>
     *
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }

    /**
     *
     *
     * <pre>
     * name and nullable are only needed in combination with a struct not for vec, list and map
     * Map -&gt; has the order key type, value type
     * </pre>
     *
     * <code>optional string name = 1;</code>
     *
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NULLABLE_FIELD_NUMBER = 2;
    private boolean nullable_ = false;

    /**
     * <code>optional bool nullable = 2;</code>
     *
     * @return Whether the nullable field is set.
     */
    @java.lang.Override
    public boolean hasNullable() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     * <code>optional bool nullable = 2;</code>
     *
     * @return The nullable.
     */
    @java.lang.Override
    public boolean getNullable() {
      return nullable_;
    }

    public static final int SCALARFIELD_FIELD_NUMBER = 3;

    /**
     * <code>.mlt.ScalarField scalarField = 3;</code>
     *
     * @return Whether the scalarField field is set.
     */
    @java.lang.Override
    public boolean hasScalarField() {
      return typeCase_ == 3;
    }

    /**
     * <code>.mlt.ScalarField scalarField = 3;</code>
     *
     * @return The scalarField.
     */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField getScalarField() {
      if (typeCase_ == 3) {
        return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) type_;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.getDefaultInstance();
    }

    /** <code>.mlt.ScalarField scalarField = 3;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarFieldOrBuilder
        getScalarFieldOrBuilder() {
      if (typeCase_ == 3) {
        return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) type_;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.getDefaultInstance();
    }

    public static final int COMPLEXFIELD_FIELD_NUMBER = 4;

    /**
     * <code>.mlt.ComplexField complexField = 4;</code>
     *
     * @return Whether the complexField field is set.
     */
    @java.lang.Override
    public boolean hasComplexField() {
      return typeCase_ == 4;
    }

    /**
     * <code>.mlt.ComplexField complexField = 4;</code>
     *
     * @return The complexField.
     */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField getComplexField() {
      if (typeCase_ == 4) {
        return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) type_;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.getDefaultInstance();
    }

    /** <code>.mlt.ComplexField complexField = 4;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexFieldOrBuilder
        getComplexFieldOrBuilder() {
      if (typeCase_ == 4) {
        return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) type_;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, nullable_);
      }
      if (typeCase_ == 3) {
        output.writeMessage(
            3, (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) type_);
      }
      if (typeCase_ == 4) {
        output.writeMessage(
            4, (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, nullable_);
      }
      if (typeCase_ == 3) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                3, (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) type_);
      }
      if (typeCase_ == 4) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                4, (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field)) {
        return super.equals(obj);
      }
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field other =
          (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName().equals(other.getName())) return false;
      }
      if (hasNullable() != other.hasNullable()) return false;
      if (hasNullable()) {
        if (getNullable() != other.getNullable()) return false;
      }
      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 3:
          if (!getScalarField().equals(other.getScalarField())) return false;
          break;
        case 4:
          if (!getComplexField().equals(other.getComplexField())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasNullable()) {
        hash = (37 * hash) + NULLABLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getNullable());
      }
      switch (typeCase_) {
        case 3:
          hash = (37 * hash) + SCALARFIELD_FIELD_NUMBER;
          hash = (53 * hash) + getScalarField().hashCode();
          break;
        case 4:
          hash = (37 * hash) + COMPLEXFIELD_FIELD_NUMBER;
          hash = (53 * hash) + getComplexField().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * Fields define nested or leaf types in the schema as part of a complex type definition
     * </pre>
     *
     * Protobuf type {@code mlt.Field}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:mlt.Field)
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_Field_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_Field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.class,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder.class);
      }

      // Construct using org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        nullable_ = false;
        if (scalarFieldBuilder_ != null) {
          scalarFieldBuilder_.clear();
        }
        if (complexFieldBuilder_ != null) {
          complexFieldBuilder_.clear();
        }
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_Field_descriptor;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field
          getDefaultInstanceForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.getDefaultInstance();
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field build() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field buildPartial() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field result =
            new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.nullable_ = nullable_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
        if (typeCase_ == 3 && scalarFieldBuilder_ != null) {
          result.type_ = scalarFieldBuilder_.build();
        }
        if (typeCase_ == 4 && complexFieldBuilder_ != null) {
          result.type_ = complexFieldBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field) {
          return mergeFrom((org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field other) {
        if (other
            == org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.getDefaultInstance())
          return this;
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasNullable()) {
          setNullable(other.getNullable());
        }
        switch (other.getTypeCase()) {
          case SCALARFIELD:
            {
              mergeScalarField(other.getScalarField());
              break;
            }
          case COMPLEXFIELD:
            {
              mergeComplexField(other.getComplexField());
              break;
            }
          case TYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 16:
                {
                  nullable_ = input.readBool();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              case 26:
                {
                  input.readMessage(getScalarFieldFieldBuilder().getBuilder(), extensionRegistry);
                  typeCase_ = 3;
                  break;
                } // case 26
              case 34:
                {
                  input.readMessage(getComplexFieldFieldBuilder().getBuilder(), extensionRegistry);
                  typeCase_ = 4;
                  break;
                } // case 34
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;

      public TypeCase getTypeCase() {
        return TypeCase.forNumber(typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object name_ = "";

      /**
       *
       *
       * <pre>
       * name and nullable are only needed in combination with a struct not for vec, list and map
       * Map -&gt; has the order key type, value type
       * </pre>
       *
       * <code>optional string name = 1;</code>
       *
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }

      /**
       *
       *
       * <pre>
       * name and nullable are only needed in combination with a struct not for vec, list and map
       * Map -&gt; has the order key type, value type
       * </pre>
       *
       * <code>optional string name = 1;</code>
       *
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * name and nullable are only needed in combination with a struct not for vec, list and map
       * Map -&gt; has the order key type, value type
       * </pre>
       *
       * <code>optional string name = 1;</code>
       *
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * name and nullable are only needed in combination with a struct not for vec, list and map
       * Map -&gt; has the order key type, value type
       * </pre>
       *
       * <code>optional string name = 1;</code>
       *
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * name and nullable are only needed in combination with a struct not for vec, list and map
       * Map -&gt; has the order key type, value type
       * </pre>
       *
       * <code>optional string name = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * name and nullable are only needed in combination with a struct not for vec, list and map
       * Map -&gt; has the order key type, value type
       * </pre>
       *
       * <code>optional string name = 1;</code>
       *
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private boolean nullable_;

      /**
       * <code>optional bool nullable = 2;</code>
       *
       * @return Whether the nullable field is set.
       */
      @java.lang.Override
      public boolean hasNullable() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       * <code>optional bool nullable = 2;</code>
       *
       * @return The nullable.
       */
      @java.lang.Override
      public boolean getNullable() {
        return nullable_;
      }

      /**
       * <code>optional bool nullable = 2;</code>
       *
       * @param value The nullable to set.
       * @return This builder for chaining.
       */
      public Builder setNullable(boolean value) {

        nullable_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       * <code>optional bool nullable = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearNullable() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nullable_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarFieldOrBuilder>
          scalarFieldBuilder_;

      /**
       * <code>.mlt.ScalarField scalarField = 3;</code>
       *
       * @return Whether the scalarField field is set.
       */
      @java.lang.Override
      public boolean hasScalarField() {
        return typeCase_ == 3;
      }

      /**
       * <code>.mlt.ScalarField scalarField = 3;</code>
       *
       * @return The scalarField.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField getScalarField() {
        if (scalarFieldBuilder_ == null) {
          if (typeCase_ == 3) {
            return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) type_;
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
              .getDefaultInstance();
        } else {
          if (typeCase_ == 3) {
            return scalarFieldBuilder_.getMessage();
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
              .getDefaultInstance();
        }
      }

      /** <code>.mlt.ScalarField scalarField = 3;</code> */
      public Builder setScalarField(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField value) {
        if (scalarFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          scalarFieldBuilder_.setMessage(value);
        }
        typeCase_ = 3;
        return this;
      }

      /** <code>.mlt.ScalarField scalarField = 3;</code> */
      public Builder setScalarField(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.Builder
              builderForValue) {
        if (scalarFieldBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          scalarFieldBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 3;
        return this;
      }

      /** <code>.mlt.ScalarField scalarField = 3;</code> */
      public Builder mergeScalarField(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField value) {
        if (scalarFieldBuilder_ == null) {
          if (typeCase_ == 3
              && type_
                  != org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
                      .getDefaultInstance()) {
            type_ =
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.newBuilder(
                        (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) type_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 3) {
            scalarFieldBuilder_.mergeFrom(value);
          } else {
            scalarFieldBuilder_.setMessage(value);
          }
        }
        typeCase_ = 3;
        return this;
      }

      /** <code>.mlt.ScalarField scalarField = 3;</code> */
      public Builder clearScalarField() {
        if (scalarFieldBuilder_ == null) {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
          }
          scalarFieldBuilder_.clear();
        }
        return this;
      }

      /** <code>.mlt.ScalarField scalarField = 3;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.Builder
          getScalarFieldBuilder() {
        return getScalarFieldFieldBuilder().getBuilder();
      }

      /** <code>.mlt.ScalarField scalarField = 3;</code> */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarFieldOrBuilder
          getScalarFieldOrBuilder() {
        if ((typeCase_ == 3) && (scalarFieldBuilder_ != null)) {
          return scalarFieldBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 3) {
            return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) type_;
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
              .getDefaultInstance();
        }
      }

      /** <code>.mlt.ScalarField scalarField = 3;</code> */
      private com.google.protobuf.SingleFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarFieldOrBuilder>
          getScalarFieldFieldBuilder() {
        if (scalarFieldBuilder_ == null) {
          if (!(typeCase_ == 3)) {
            type_ =
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
                    .getDefaultInstance();
          }
          scalarFieldBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.Builder,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarFieldOrBuilder>(
                  (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 3;
        onChanged();
        return scalarFieldBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexFieldOrBuilder>
          complexFieldBuilder_;

      /**
       * <code>.mlt.ComplexField complexField = 4;</code>
       *
       * @return Whether the complexField field is set.
       */
      @java.lang.Override
      public boolean hasComplexField() {
        return typeCase_ == 4;
      }

      /**
       * <code>.mlt.ComplexField complexField = 4;</code>
       *
       * @return The complexField.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField getComplexField() {
        if (complexFieldBuilder_ == null) {
          if (typeCase_ == 4) {
            return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) type_;
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
              .getDefaultInstance();
        } else {
          if (typeCase_ == 4) {
            return complexFieldBuilder_.getMessage();
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
              .getDefaultInstance();
        }
      }

      /** <code>.mlt.ComplexField complexField = 4;</code> */
      public Builder setComplexField(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField value) {
        if (complexFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          complexFieldBuilder_.setMessage(value);
        }
        typeCase_ = 4;
        return this;
      }

      /** <code>.mlt.ComplexField complexField = 4;</code> */
      public Builder setComplexField(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.Builder
              builderForValue) {
        if (complexFieldBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          complexFieldBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 4;
        return this;
      }

      /** <code>.mlt.ComplexField complexField = 4;</code> */
      public Builder mergeComplexField(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField value) {
        if (complexFieldBuilder_ == null) {
          if (typeCase_ == 4
              && type_
                  != org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
                      .getDefaultInstance()) {
            type_ =
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.newBuilder(
                        (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) type_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 4) {
            complexFieldBuilder_.mergeFrom(value);
          } else {
            complexFieldBuilder_.setMessage(value);
          }
        }
        typeCase_ = 4;
        return this;
      }

      /** <code>.mlt.ComplexField complexField = 4;</code> */
      public Builder clearComplexField() {
        if (complexFieldBuilder_ == null) {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
          }
          complexFieldBuilder_.clear();
        }
        return this;
      }

      /** <code>.mlt.ComplexField complexField = 4;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.Builder
          getComplexFieldBuilder() {
        return getComplexFieldFieldBuilder().getBuilder();
      }

      /** <code>.mlt.ComplexField complexField = 4;</code> */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexFieldOrBuilder
          getComplexFieldOrBuilder() {
        if ((typeCase_ == 4) && (complexFieldBuilder_ != null)) {
          return complexFieldBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 4) {
            return (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) type_;
          }
          return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
              .getDefaultInstance();
        }
      }

      /** <code>.mlt.ComplexField complexField = 4;</code> */
      private com.google.protobuf.SingleFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexFieldOrBuilder>
          getComplexFieldFieldBuilder() {
        if (complexFieldBuilder_ == null) {
          if (!(typeCase_ == 4)) {
            type_ =
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
                    .getDefaultInstance();
          }
          complexFieldBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.Builder,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexFieldOrBuilder>(
                  (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 4;
        onChanged();
        return complexFieldBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:mlt.Field)
    }

    // @@protoc_insertion_point(class_scope:mlt.Field)
    private static final org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field();
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Field> PARSER =
        new com.google.protobuf.AbstractParser<Field>() {
          @java.lang.Override
          public Field parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Field> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Field> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ScalarFieldOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:mlt.ScalarField)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.mlt.ScalarType physicalType = 1;</code>
     *
     * @return Whether the physicalType field is set.
     */
    boolean hasPhysicalType();

    /**
     * <code>.mlt.ScalarType physicalType = 1;</code>
     *
     * @return The enum numeric value on the wire for physicalType.
     */
    int getPhysicalTypeValue();

    /**
     * <code>.mlt.ScalarType physicalType = 1;</code>
     *
     * @return The physicalType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType getPhysicalType();

    /**
     * <code>.mlt.LogicalScalarType logicalType = 2;</code>
     *
     * @return Whether the logicalType field is set.
     */
    boolean hasLogicalType();

    /**
     * <code>.mlt.LogicalScalarType logicalType = 2;</code>
     *
     * @return The enum numeric value on the wire for logicalType.
     */
    int getLogicalTypeValue();

    /**
     * <code>.mlt.LogicalScalarType logicalType = 2;</code>
     *
     * @return The logicalType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType getLogicalType();

    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.TypeCase getTypeCase();
  }

  /** Protobuf type {@code mlt.ScalarField} */
  public static final class ScalarField extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:mlt.ScalarField)
      ScalarFieldOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use ScalarField.newBuilder() to construct.
    private ScalarField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ScalarField() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ScalarField();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_ScalarField_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_ScalarField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.class,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.Builder.class);
    }

    private int typeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object type_;

    public enum TypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PHYSICALTYPE(1),
      LOGICALTYPE(2),
      TYPE_NOT_SET(0);
      private final int value;

      private TypeCase(int value) {
        this.value = value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1:
            return PHYSICALTYPE;
          case 2:
            return LOGICALTYPE;
          case 0:
            return TYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public static final int PHYSICALTYPE_FIELD_NUMBER = 1;

    /**
     * <code>.mlt.ScalarType physicalType = 1;</code>
     *
     * @return Whether the physicalType field is set.
     */
    public boolean hasPhysicalType() {
      return typeCase_ == 1;
    }

    /**
     * <code>.mlt.ScalarType physicalType = 1;</code>
     *
     * @return The enum numeric value on the wire for physicalType.
     */
    public int getPhysicalTypeValue() {
      if (typeCase_ == 1) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    /**
     * <code>.mlt.ScalarType physicalType = 1;</code>
     *
     * @return The physicalType.
     */
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType getPhysicalType() {
      if (typeCase_ == 1) {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.forNumber(
                (java.lang.Integer) type_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.UNRECOGNIZED
            : result;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.BOOLEAN;
    }

    public static final int LOGICALTYPE_FIELD_NUMBER = 2;

    /**
     * <code>.mlt.LogicalScalarType logicalType = 2;</code>
     *
     * @return Whether the logicalType field is set.
     */
    public boolean hasLogicalType() {
      return typeCase_ == 2;
    }

    /**
     * <code>.mlt.LogicalScalarType logicalType = 2;</code>
     *
     * @return The enum numeric value on the wire for logicalType.
     */
    public int getLogicalTypeValue() {
      if (typeCase_ == 2) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    /**
     * <code>.mlt.LogicalScalarType logicalType = 2;</code>
     *
     * @return The logicalType.
     */
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType getLogicalType() {
      if (typeCase_ == 2) {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.forNumber(
                (java.lang.Integer) type_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.UNRECOGNIZED
            : result;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.TIMESTAMP;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeEnum(1, ((java.lang.Integer) type_));
      }
      if (typeCase_ == 2) {
        output.writeEnum(2, ((java.lang.Integer) type_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size +=
            com.google.protobuf.CodedOutputStream.computeEnumSize(1, ((java.lang.Integer) type_));
      }
      if (typeCase_ == 2) {
        size +=
            com.google.protobuf.CodedOutputStream.computeEnumSize(2, ((java.lang.Integer) type_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField)) {
        return super.equals(obj);
      }
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField other =
          (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (getPhysicalTypeValue() != other.getPhysicalTypeValue()) return false;
          break;
        case 2:
          if (getLogicalTypeValue() != other.getLogicalTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + PHYSICALTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getPhysicalTypeValue();
          break;
        case 2:
          hash = (37 * hash) + LOGICALTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getLogicalTypeValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /** Protobuf type {@code mlt.ScalarField} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:mlt.ScalarField)
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarFieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ScalarField_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ScalarField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.class,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.Builder.class);
      }

      // Construct using
      // org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ScalarField_descriptor;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
          getDefaultInstanceForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField build() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField buildPartial() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField result =
            new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) {
          return mergeFrom(
              (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField other) {
        if (other
            == org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
                .getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case PHYSICALTYPE:
            {
              setPhysicalTypeValue(other.getPhysicalTypeValue());
              break;
            }
          case LOGICALTYPE:
            {
              setLogicalTypeValue(other.getLogicalTypeValue());
              break;
            }
          case TYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  int rawValue = input.readEnum();
                  typeCase_ = 1;
                  type_ = rawValue;
                  break;
                } // case 8
              case 16:
                {
                  int rawValue = input.readEnum();
                  typeCase_ = 2;
                  type_ = rawValue;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;

      public TypeCase getTypeCase() {
        return TypeCase.forNumber(typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>.mlt.ScalarType physicalType = 1;</code>
       *
       * @return Whether the physicalType field is set.
       */
      @java.lang.Override
      public boolean hasPhysicalType() {
        return typeCase_ == 1;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 1;</code>
       *
       * @return The enum numeric value on the wire for physicalType.
       */
      @java.lang.Override
      public int getPhysicalTypeValue() {
        if (typeCase_ == 1) {
          return ((java.lang.Integer) type_).intValue();
        }
        return 0;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 1;</code>
       *
       * @param value The enum numeric value on the wire for physicalType to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalTypeValue(int value) {
        typeCase_ = 1;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 1;</code>
       *
       * @return The physicalType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType getPhysicalType() {
        if (typeCase_ == 1) {
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType result =
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.forNumber(
                  (java.lang.Integer) type_);
          return result == null
              ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.UNRECOGNIZED
              : result;
        }
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType.BOOLEAN;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 1;</code>
       *
       * @param value The physicalType to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeCase_ = 1;
        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ScalarType physicalType = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearPhysicalType() {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 2;</code>
       *
       * @return Whether the logicalType field is set.
       */
      @java.lang.Override
      public boolean hasLogicalType() {
        return typeCase_ == 2;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 2;</code>
       *
       * @return The enum numeric value on the wire for logicalType.
       */
      @java.lang.Override
      public int getLogicalTypeValue() {
        if (typeCase_ == 2) {
          return ((java.lang.Integer) type_).intValue();
        }
        return 0;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 2;</code>
       *
       * @param value The enum numeric value on the wire for logicalType to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalTypeValue(int value) {
        typeCase_ = 2;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 2;</code>
       *
       * @return The logicalType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType
          getLogicalType() {
        if (typeCase_ == 2) {
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType result =
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.forNumber(
                  (java.lang.Integer) type_);
          return result == null
              ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.UNRECOGNIZED
              : result;
        }
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType.TIMESTAMP;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 2;</code>
       *
       * @param value The logicalType to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalScalarType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeCase_ = 2;
        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.LogicalScalarType logicalType = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLogicalType() {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:mlt.ScalarField)
    }

    // @@protoc_insertion_point(class_scope:mlt.ScalarField)
    private static final org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField();
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScalarField> PARSER =
        new com.google.protobuf.AbstractParser<ScalarField>() {
          @java.lang.Override
          public ScalarField parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ScalarField> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScalarField> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ScalarField
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ComplexFieldOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:mlt.ComplexField)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.mlt.ComplexType physicalType = 1;</code>
     *
     * @return Whether the physicalType field is set.
     */
    boolean hasPhysicalType();

    /**
     * <code>.mlt.ComplexType physicalType = 1;</code>
     *
     * @return The enum numeric value on the wire for physicalType.
     */
    int getPhysicalTypeValue();

    /**
     * <code>.mlt.ComplexType physicalType = 1;</code>
     *
     * @return The physicalType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType getPhysicalType();

    /**
     * <code>.mlt.LogicalComplexType logicalType = 2;</code>
     *
     * @return Whether the logicalType field is set.
     */
    boolean hasLogicalType();

    /**
     * <code>.mlt.LogicalComplexType logicalType = 2;</code>
     *
     * @return The enum numeric value on the wire for logicalType.
     */
    int getLogicalTypeValue();

    /**
     * <code>.mlt.LogicalComplexType logicalType = 2;</code>
     *
     * @return The logicalType.
     */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType getLogicalType();

    /** <code>repeated .mlt.Field children = 3;</code> */
    java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field> getChildrenList();

    /** <code>repeated .mlt.Field children = 3;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field getChildren(int index);

    /** <code>repeated .mlt.Field children = 3;</code> */
    int getChildrenCount();

    /** <code>repeated .mlt.Field children = 3;</code> */
    java.util.List<? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
        getChildrenOrBuilderList();

    /** <code>repeated .mlt.Field children = 3;</code> */
    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder getChildrenOrBuilder(
        int index);

    org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.TypeCase getTypeCase();
  }

  /** Protobuf type {@code mlt.ComplexField} */
  public static final class ComplexField extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:mlt.ComplexField)
      ComplexFieldOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use ComplexField.newBuilder() to construct.
    private ComplexField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ComplexField() {
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ComplexField();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_ComplexField_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
          .internal_static_mlt_ComplexField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.class,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.Builder.class);
    }

    private int typeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object type_;

    public enum TypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PHYSICALTYPE(1),
      LOGICALTYPE(2),
      TYPE_NOT_SET(0);
      private final int value;

      private TypeCase(int value) {
        this.value = value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1:
            return PHYSICALTYPE;
          case 2:
            return LOGICALTYPE;
          case 0:
            return TYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public static final int PHYSICALTYPE_FIELD_NUMBER = 1;

    /**
     * <code>.mlt.ComplexType physicalType = 1;</code>
     *
     * @return Whether the physicalType field is set.
     */
    public boolean hasPhysicalType() {
      return typeCase_ == 1;
    }

    /**
     * <code>.mlt.ComplexType physicalType = 1;</code>
     *
     * @return The enum numeric value on the wire for physicalType.
     */
    public int getPhysicalTypeValue() {
      if (typeCase_ == 1) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    /**
     * <code>.mlt.ComplexType physicalType = 1;</code>
     *
     * @return The physicalType.
     */
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType getPhysicalType() {
      if (typeCase_ == 1) {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.forNumber(
                (java.lang.Integer) type_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.UNRECOGNIZED
            : result;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.VEC_2;
    }

    public static final int LOGICALTYPE_FIELD_NUMBER = 2;

    /**
     * <code>.mlt.LogicalComplexType logicalType = 2;</code>
     *
     * @return Whether the logicalType field is set.
     */
    public boolean hasLogicalType() {
      return typeCase_ == 2;
    }

    /**
     * <code>.mlt.LogicalComplexType logicalType = 2;</code>
     *
     * @return The enum numeric value on the wire for logicalType.
     */
    public int getLogicalTypeValue() {
      if (typeCase_ == 2) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    /**
     * <code>.mlt.LogicalComplexType logicalType = 2;</code>
     *
     * @return The logicalType.
     */
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType
        getLogicalType() {
      if (typeCase_ == 2) {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType result =
            org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.forNumber(
                (java.lang.Integer) type_);
        return result == null
            ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.UNRECOGNIZED
            : result;
      }
      return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.BINARY;
    }

    public static final int CHILDREN_FIELD_NUMBER = 3;

    @SuppressWarnings("serial")
    private java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field> children_;

    /** <code>repeated .mlt.Field children = 3;</code> */
    @java.lang.Override
    public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field>
        getChildrenList() {
      return children_;
    }

    /** <code>repeated .mlt.Field children = 3;</code> */
    @java.lang.Override
    public java.util.List<
            ? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
        getChildrenOrBuilderList() {
      return children_;
    }

    /** <code>repeated .mlt.Field children = 3;</code> */
    @java.lang.Override
    public int getChildrenCount() {
      return children_.size();
    }

    /** <code>repeated .mlt.Field children = 3;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field getChildren(int index) {
      return children_.get(index);
    }

    /** <code>repeated .mlt.Field children = 3;</code> */
    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeEnum(1, ((java.lang.Integer) type_));
      }
      if (typeCase_ == 2) {
        output.writeEnum(2, ((java.lang.Integer) type_));
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(3, children_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size +=
            com.google.protobuf.CodedOutputStream.computeEnumSize(1, ((java.lang.Integer) type_));
      }
      if (typeCase_ == 2) {
        size +=
            com.google.protobuf.CodedOutputStream.computeEnumSize(2, ((java.lang.Integer) type_));
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, children_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField)) {
        return super.equals(obj);
      }
      org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField other =
          (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) obj;

      if (!getChildrenList().equals(other.getChildrenList())) return false;
      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (getPhysicalTypeValue() != other.getPhysicalTypeValue()) return false;
          break;
        case 2:
          if (getLogicalTypeValue() != other.getLogicalTypeValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + PHYSICALTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getPhysicalTypeValue();
          break;
        case 2:
          hash = (37 * hash) + LOGICALTYPE_FIELD_NUMBER;
          hash = (53 * hash) + getLogicalTypeValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /** Protobuf type {@code mlt.ComplexField} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:mlt.ComplexField)
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexFieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ComplexField_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ComplexField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.class,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.Builder.class);
      }

      // Construct using
      // org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
        } else {
          children_ = null;
          childrenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata
            .internal_static_mlt_ComplexField_descriptor;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
          getDefaultInstanceForType() {
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
            .getDefaultInstance();
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField build() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField buildPartial() {
        org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField result =
            new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField result) {
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
      }

      private void buildPartial0(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) {
          return mergeFrom(
              (org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField other) {
        if (other
            == org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
                .getDefaultInstance()) return this;
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000004);
              childrenBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getChildrenFieldBuilder()
                      : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        switch (other.getTypeCase()) {
          case PHYSICALTYPE:
            {
              setPhysicalTypeValue(other.getPhysicalTypeValue());
              break;
            }
          case LOGICALTYPE:
            {
              setLogicalTypeValue(other.getLogicalTypeValue());
              break;
            }
          case TYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  int rawValue = input.readEnum();
                  typeCase_ = 1;
                  type_ = rawValue;
                  break;
                } // case 8
              case 16:
                {
                  int rawValue = input.readEnum();
                  typeCase_ = 2;
                  type_ = rawValue;
                  break;
                } // case 16
              case 26:
                {
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field m =
                      input.readMessage(
                          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.parser(),
                          extensionRegistry);
                  if (childrenBuilder_ == null) {
                    ensureChildrenIsMutable();
                    children_.add(m);
                  } else {
                    childrenBuilder_.addMessage(m);
                  }
                  break;
                } // case 26
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;

      public TypeCase getTypeCase() {
        return TypeCase.forNumber(typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>.mlt.ComplexType physicalType = 1;</code>
       *
       * @return Whether the physicalType field is set.
       */
      @java.lang.Override
      public boolean hasPhysicalType() {
        return typeCase_ == 1;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 1;</code>
       *
       * @return The enum numeric value on the wire for physicalType.
       */
      @java.lang.Override
      public int getPhysicalTypeValue() {
        if (typeCase_ == 1) {
          return ((java.lang.Integer) type_).intValue();
        }
        return 0;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 1;</code>
       *
       * @param value The enum numeric value on the wire for physicalType to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalTypeValue(int value) {
        typeCase_ = 1;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 1;</code>
       *
       * @return The physicalType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType getPhysicalType() {
        if (typeCase_ == 1) {
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType result =
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.forNumber(
                  (java.lang.Integer) type_);
          return result == null
              ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.UNRECOGNIZED
              : result;
        }
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType.VEC_2;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 1;</code>
       *
       * @param value The physicalType to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeCase_ = 1;
        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.ComplexType physicalType = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearPhysicalType() {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 2;</code>
       *
       * @return Whether the logicalType field is set.
       */
      @java.lang.Override
      public boolean hasLogicalType() {
        return typeCase_ == 2;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 2;</code>
       *
       * @return The enum numeric value on the wire for logicalType.
       */
      @java.lang.Override
      public int getLogicalTypeValue() {
        if (typeCase_ == 2) {
          return ((java.lang.Integer) type_).intValue();
        }
        return 0;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 2;</code>
       *
       * @param value The enum numeric value on the wire for logicalType to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalTypeValue(int value) {
        typeCase_ = 2;
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 2;</code>
       *
       * @return The logicalType.
       */
      @java.lang.Override
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType
          getLogicalType() {
        if (typeCase_ == 2) {
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType result =
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.forNumber(
                  (java.lang.Integer) type_);
          return result == null
              ? org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.UNRECOGNIZED
              : result;
        }
        return org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType.BINARY;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 2;</code>
       *
       * @param value The logicalType to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalType(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.LogicalComplexType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeCase_ = 2;
        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.mlt.LogicalComplexType logicalType = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLogicalType() {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      private java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field> children_ =
          java.util.Collections.emptyList();

      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          children_ =
              new java.util.ArrayList<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field>(
                  children_);
          bitField0_ |= 0x00000004;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
          childrenBuilder_;

      /** <code>repeated .mlt.Field children = 3;</code> */
      public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field>
          getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder setChildren(
          int index, org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder setChildren(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder addChildren(org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder addChildren(
          int index, org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder addChildren(
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder addChildren(
          int index,
          org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder addAllChildren(
          java.lang.Iterable<? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field>
              values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder
          getChildrenOrBuilder(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public java.util.List<
              ? extends org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
          getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder
          addChildrenBuilder() {
        return getChildrenFieldBuilder()
            .addBuilder(
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.getDefaultInstance());
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder()
            .addBuilder(
                index,
                org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.getDefaultInstance());
      }

      /** <code>repeated .mlt.Field children = 3;</code> */
      public java.util.List<org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder>
          getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder,
              org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.Field.Builder,
                  org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.FieldOrBuilder>(
                  children_, ((bitField0_ & 0x00000004) != 0), getParentForChildren(), isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:mlt.ComplexField)
    }

    // @@protoc_insertion_point(class_scope:mlt.ComplexField)
    private static final org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField();
    }

    public static org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComplexField> PARSER =
        new com.google.protobuf.AbstractParser<ComplexField>() {
          @java.lang.Override
          public ComplexField parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ComplexField> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComplexField> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.maplibre.mlt.metadata.tileset.MltTilesetMetadata.ComplexField
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_mlt_TileSetMetadata_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mlt_TileSetMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_mlt_FeatureTableSchema_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mlt_FeatureTableSchema_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_mlt_Column_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mlt_Column_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_mlt_ScalarColumn_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mlt_ScalarColumn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_mlt_ComplexColumn_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mlt_ComplexColumn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_mlt_Field_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mlt_Field_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_mlt_ScalarField_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mlt_ScalarField_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_mlt_ComplexField_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mlt_ComplexField_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n\032mlt_tileset_metadata.proto\022\003mlt\"\246\002\n\017Ti"
          + "leSetMetadata\022\017\n\007version\030\001 \001(\005\022.\n\rfeatur"
          + "eTables\030\002 \003(\0132\027.mlt.FeatureTableSchema\022\021"
          + "\n\004name\030\003 \001(\tH\000\210\001\001\022\030\n\013description\030\004 \001(\tH\001"
          + "\210\001\001\022\030\n\013attribution\030\005 \001(\tH\002\210\001\001\022\024\n\007minZoom"
          + "\030\006 \001(\005H\003\210\001\001\022\024\n\007maxZoom\030\007 \001(\005H\004\210\001\001\022\016\n\006bou"
          + "nds\030\010 \003(\001\022\016\n\006center\030\t \003(\001B\007\n\005_nameB\016\n\014_d"
          + "escriptionB\016\n\014_attributionB\n\n\010_minZoomB\n"
          + "\n\010_maxZoom\"@\n\022FeatureTableSchema\022\014\n\004name"
          + "\030\001 \001(\t\022\034\n\007columns\030\002 \003(\0132\013.mlt.Column\"\253\001\n"
          + "\006Column\022\014\n\004name\030\001 \001(\t\022\020\n\010nullable\030\002 \001(\010\022"
          + "%\n\013columnScope\030\003 \001(\0162\020.mlt.ColumnScope\022\'"
          + "\n\nscalarType\030\004 \001(\0132\021.mlt.ScalarColumnH\000\022"
          + ")\n\013complexType\030\005 \001(\0132\022.mlt.ComplexColumn"
          + "H\000B\006\n\004type\"n\n\014ScalarColumn\022\'\n\014physicalTy"
          + "pe\030\004 \001(\0162\017.mlt.ScalarTypeH\000\022-\n\013logicalTy"
          + "pe\030\005 \001(\0162\026.mlt.LogicalScalarTypeH\000B\006\n\004ty"
          + "pe\"\217\001\n\rComplexColumn\022(\n\014physicalType\030\004 \001"
          + "(\0162\020.mlt.ComplexTypeH\000\022.\n\013logicalType\030\005 "
          + "\001(\0162\027.mlt.LogicalComplexTypeH\000\022\034\n\010childr"
          + "en\030\006 \003(\0132\n.mlt.FieldB\006\n\004type\"\243\001\n\005Field\022\021"
          + "\n\004name\030\001 \001(\tH\001\210\001\001\022\025\n\010nullable\030\002 \001(\010H\002\210\001\001"
          + "\022\'\n\013scalarField\030\003 \001(\0132\020.mlt.ScalarFieldH"
          + "\000\022)\n\014complexField\030\004 \001(\0132\021.mlt.ComplexFie"
          + "ldH\000B\006\n\004typeB\007\n\005_nameB\013\n\t_nullable\"m\n\013Sc"
          + "alarField\022\'\n\014physicalType\030\001 \001(\0162\017.mlt.Sc"
          + "alarTypeH\000\022-\n\013logicalType\030\002 \001(\0162\026.mlt.Lo"
          + "gicalScalarTypeH\000B\006\n\004type\"\216\001\n\014ComplexFie"
          + "ld\022(\n\014physicalType\030\001 \001(\0162\020.mlt.ComplexTy"
          + "peH\000\022.\n\013logicalType\030\002 \001(\0162\027.mlt.LogicalC"
          + "omplexTypeH\000\022\034\n\010children\030\003 \003(\0132\n.mlt.Fie"
          + "ldB\006\n\004type*&\n\013ColumnScope\022\013\n\007FEATURE\020\000\022\n"
          + "\n\006VERTEX\020\001*\205\001\n\nScalarType\022\013\n\007BOOLEAN\020\000\022\t"
          + "\n\005INT_8\020\001\022\n\n\006UINT_8\020\002\022\n\n\006INT_32\020\003\022\013\n\007UIN"
          + "T_32\020\004\022\n\n\006INT_64\020\005\022\013\n\007UINT_64\020\006\022\t\n\005FLOAT"
          + "\020\007\022\n\n\006DOUBLE\020\010\022\n\n\006STRING\020\t*`\n\013ComplexTyp"
          + "e\022\t\n\005VEC_2\020\000\022\t\n\005VEC_3\020\001\022\014\n\010GEOMETRY\020\002\022\016\n"
          + "\nGEOMETRY_Z\020\003\022\010\n\004LIST\020\004\022\007\n\003MAP\020\005\022\n\n\006STRU"
          + "CT\020\006*6\n\021LogicalScalarType\022\r\n\tTIMESTAMP\020\000"
          + "\022\010\n\004DATE\020\001\022\010\n\004JSON\020\002*/\n\022LogicalComplexTy"
          + "pe\022\n\n\006BINARY\020\000\022\r\n\tRANGE_MAP\020\001B\032\n\030org.maplibre.mlt"
          + ".metadata.tilesetb\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[] {});
    internal_static_mlt_TileSetMetadata_descriptor = getDescriptor().getMessageTypes().get(0);
    internal_static_mlt_TileSetMetadata_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_mlt_TileSetMetadata_descriptor,
            new java.lang.String[] {
              "Version",
              "FeatureTables",
              "Name",
              "Description",
              "Attribution",
              "MinZoom",
              "MaxZoom",
              "Bounds",
              "Center",
              "Name",
              "Description",
              "Attribution",
              "MinZoom",
              "MaxZoom",
            });
    internal_static_mlt_FeatureTableSchema_descriptor = getDescriptor().getMessageTypes().get(1);
    internal_static_mlt_FeatureTableSchema_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_mlt_FeatureTableSchema_descriptor,
            new java.lang.String[] {
              "Name", "Columns",
            });
    internal_static_mlt_Column_descriptor = getDescriptor().getMessageTypes().get(2);
    internal_static_mlt_Column_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_mlt_Column_descriptor,
            new java.lang.String[] {
              "Name", "Nullable", "ColumnScope", "ScalarType", "ComplexType", "Type",
            });
    internal_static_mlt_ScalarColumn_descriptor = getDescriptor().getMessageTypes().get(3);
    internal_static_mlt_ScalarColumn_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_mlt_ScalarColumn_descriptor,
            new java.lang.String[] {
              "PhysicalType", "LogicalType", "Type",
            });
    internal_static_mlt_ComplexColumn_descriptor = getDescriptor().getMessageTypes().get(4);
    internal_static_mlt_ComplexColumn_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_mlt_ComplexColumn_descriptor,
            new java.lang.String[] {
              "PhysicalType", "LogicalType", "Children", "Type",
            });
    internal_static_mlt_Field_descriptor = getDescriptor().getMessageTypes().get(5);
    internal_static_mlt_Field_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_mlt_Field_descriptor,
            new java.lang.String[] {
              "Name", "Nullable", "ScalarField", "ComplexField", "Type", "Name", "Nullable",
            });
    internal_static_mlt_ScalarField_descriptor = getDescriptor().getMessageTypes().get(6);
    internal_static_mlt_ScalarField_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_mlt_ScalarField_descriptor,
            new java.lang.String[] {
              "PhysicalType", "LogicalType", "Type",
            });
    internal_static_mlt_ComplexField_descriptor = getDescriptor().getMessageTypes().get(7);
    internal_static_mlt_ComplexField_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_mlt_ComplexField_descriptor,
            new java.lang.String[] {
              "PhysicalType", "LogicalType", "Children", "Type",
            });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
